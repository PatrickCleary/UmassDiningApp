{"version":3,"sources":["C:/Users/Patrick/AwesomeProject/javaScriptFiles/Tools.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/Test.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/ToolBar.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/helperFunctions.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/FavoritesListItems.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/FoodPage.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/FavoritesOptionsList.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/Favorites.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/Settings.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/FoodListItem.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/FoodList.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/SearchFilterItems.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/SearchFilterItemsCategory.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/SearchFilters.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/Search.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/CenterPiece.js","C:/Users/Patrick/AwesomeProject/javaScriptFiles/Main.js","C:/Users/Patrick/AwesomeProject/App.js"],"names":["Tools","props","title","View","style","flex","justifyContent","alignItems","AntDesign","name","color","size","Test","cat","console","log","ToolBar","flexDirection","backgroundColor","borderTopColor","borderTopWidth","borderTopStyle","TouchableOpacity","page","onPress","onChange","pageNum","getCorrectDate","Date","getFullYear","month","parseInt","getMonth","toString","getCorrectMonth","day","getDate","getCorrectDay","arrayToString","array","string","uniqueArray","Set","x","length","hall","includes","concat","fixString","next","word","split","FavoritesListItems","React","Component","shouldComponentUpdate","nextProps","where","this","render","onFoodPress","item","rightAvatar","displayOptions","width","Entypo","titleProps","numberOfLines","subtitleStyle","containerStyle","subtitle","FoodPage","ratio","PixelRatio","getFontScale","textStyle","fontSize","foodObj","changeFood","useState","loading","setLoading","useEffect","data","query","body","method","JSON","stringify","headers","fetch","then","response","json","responseJSON","catch","error","marginTop","ActivityIndicator","paddingLeft","closeModal","Text","food","paddingRight","onFavChange","favorite","paddingTop","borderColor","borderWidth","ServingSize","Calories","TotalFat","TransFat","Cholesterol","Sodium","TotalCarb","Dietaryfiber","Sugars","Protein","allergens","Milk","push","Corn","Eggs","Gluten","Soy","Sesame","Treenuts","Fish","Shellfish","Peanuts","str","getAllergens","Diet","Vegetarian","Loc","Sustainable","WholeGrain","Halal","AntibioticFree","Vegan","getDietary","SearchFilterItems","renderSeparator","height","borderBottomWidth","contentContainerStyle","modalOptions","modalName","titleStyle","TouchableHighlight","underlayColor","actiiveOpacity","modalFav","onFavAdd","Favorites","setFood","setModalOptions","modalView","_renderItem","b","l","d","ln","gg","menu","meal","substring","foodName","bool","alignItem","isVisible","modalInfo","onSwipeComplete","swipeDirection","backdropColor","backdropOpacity","margin","boolean","onFavChangeModal","modal","onBackdropPress","Button","function","alignContent","fontFamily","Alert","alert","text","AsyncStorage","removeItem","favClear","FontAwesome","FlatList","removeClippedSubviews","ItemSeparatorComponent","favArray","renderItem","keyExtractor","index","fs","styleText","headerText","fixDates","date","join","Settings","loadingMenu","menuDate","setTimeout","updateMenu","TextInput","editable","multiline","FoodListItem","foodPress","favPress","setFav","categoryChange","currentCategory","category","FoodList","PureComponent","componentDidMount","renderHeader","jsonFood","extraData","windowSize","ListEmptyComponent","selected","changeSelected","pushReturn","newArray","selectedOptions","filter","passSelected","options","SearchFilterItemsCategory","numColumns","SearchFilters","state","visibleModalId","onClose","setState","visibleModal","styles","container","borderLeftWidth","borderRightWidth","label","bottomModal","onShow","check","selectionArray","StyleSheet","create","content","Search","categoryArray","categoriesProp","autoCorrect","round","platform","lightTheme","placeholder","onChangeText","value","searchTerm","hallFilter","passSelectedHalls","hallLabel","mealFilter","passSelectedMeals","mealLabel","categoryFilter","passSelectedCategories","categoryLabel","searchObject","jsonFavs","objectMinusCategoryFilters","favChange","oldFaves","getItem","favsArray","parse","sort","favsStr","setItem","getFavs","object","updateSearchObject","changeFavs","todaysMenu","JSONString","CenterPiece","updateSearchWait","Promise","resolve","reject","updateSearchTerm","regex","RegExp","meals","match","updateSearch","setModal","saveData","updateTodaysMenu","setMenuDate","getMenu","todaysDate","getAsyncMenu","changeMealFilter","changeHallFilter","changeCategoryFilter","categorySet","add","Array","from","getCategories","foodItem","onBack","changePage","Main","App","setPage","SafeAreaView"],"mappings":"gNAIe,SAASA,EAAMC,GAUzB,MARoB,QAAhBA,EAAMC,MACC,MACgB,aAAhBD,EAAMC,MACN,OAEA,SAIN,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,eAAgB,SAAUC,WAAY,UAA9D,qCACK,kBAACC,EAAA,EAAD,CAAWC,KAAMR,EAAMQ,KAAMC,MAAM,UAAUC,KAAM,GAAnD,uC,WCXf,SAASC,EAAKX,GAIV,OAFAY,KAAM,EAECA,KAAOA,IANlBC,QAAQC,IAAIH,KAWGA,I,oECRA,SAASI,EAAQf,GAI5B,OACI,kBAACE,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGY,cAAe,MAAOC,gBAAiB,OAAQC,eAAgB,UAAWC,eAAgB,MAAOC,eAAgB,SAAzI,qCAGI,kBAACC,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAGa,gBAA2B,IAATK,KAAc,UAAY,QAAUC,QAAS,IAAMvB,EAAMwB,SAAS,GAAxH,qCACI,kBAACzB,EAAD,CAAO0B,QAAS,EAAGxB,MAAM,SAASO,KAAK,UAAvC,uCAGJ,kBAACa,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAGa,gBAA2B,IAATK,KAAc,UAAY,QAAUC,QAAS,IAAMvB,EAAMwB,SAAS,GAAxH,qCACI,kBAACzB,EAAD,CAAO0B,QAAS,EAAGxB,MAAM,MAAMO,KAAK,QAApC,uCAGJ,kBAACa,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAGa,gBAA2B,IAATK,KAAc,UAAY,QAAUC,QAAS,IAAMvB,EAAMwB,SAAS,GAAxH,qCACI,kBAACzB,EAAD,CAAO0B,QAAS,EAAGxB,MAAM,WAAWO,KAAK,UAAzC,wC,2CClBT,SAASkB,IAmBT,OAAO,IAAIC,MAAOC,cAhBrB,WACI,IAAIC,EAASC,UAAS,IAAIH,MAAOI,YAE9B,OADAF,GAAc,GACL,GAEF,IAAIA,EAAMG,WACLH,EAAMG,WAUUC,GARhC,WACI,IAAIC,EAAMJ,UAAS,IAAIH,MAAOQ,WAC9B,OAAGD,EAAI,GACI,IAAMA,EAAIF,WAETE,EAAIF,WAG8BI,GAKlD,SAASC,EAAcC,GAI1B,IAFA,IAAIC,EAAS,GACTC,EAAc,IAAI,IAAIC,IAAIH,IACrBI,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAAK,CACzC,IAAIE,EAAO,GACX,OAAQJ,EAAYE,IAChB,IAAK,YACDE,EAAO,OACP,MACJ,IAAK,YACDA,EAAO,OACP,MACJ,IAAK,WACDA,EAAO,QACP,MACJ,QACIA,EAAO,YAGXL,EAAOM,SAASD,KAGhBL,EAFAG,EAAIF,EAAYG,OAAS,EAEhBJ,EAAOO,OAAOF,EAAO,MAErBL,EAAOO,OAAOF,IAG/B,OAAOL,EA0CJ,SAASQ,EAAUR,GAEtB,GAAIA,EAAOM,SAAS,KAAO,CAEvB,IACIG,EAAO,GACX,IAFIC,EAAOV,EAAOW,MAAM,SAEhBP,OAAO,EAAE,CACjB,IAAI,IAAID,EAAI,EAAGA,EAAGO,EAAKN,OAAO,EAAGD,IAC7BM,EAAOA,EAAKF,OAAOG,EAAKP,IAAII,OAAO,OAGnCE,EADDC,EAAKA,EAAKN,OAAO,GAAGE,SAAS,UACrBG,EAAKF,OAAOG,EAAKA,EAAKN,OAAO,GAAGG,OAAO,QAEvCE,EAAKF,OAAOG,EAAKA,EAAKN,OAAO,SAIxCK,EAAQA,EAAKF,OAAOG,EAAK,IAAIH,OAAO,OAGpCP,EAASS,EAGjB,GAAGT,EAAOM,SAAS,KAAM,CAIbG,EAAO,GACX,IAHIC,EAAOV,EAAOW,MAAM,SAGhBP,OAAO,EAAE,CACjB,IAAI,IAAID,EAAI,EAAGA,EAAGO,EAAKN,OAAO,EAAGD,IAC7BM,EAAOA,EAAKF,OAAOG,EAAKP,IAAII,OAAO,OAGnCE,EADDC,EAAKA,EAAKN,OAAO,GAAGE,SAAS,KACrBG,EAAKF,OAAOG,EAAKA,EAAKN,OAAO,GAAGG,OAAO,QAEvCE,EAAKF,OAAOG,EAAKA,EAAKN,OAAO,SAExCK,EAAQA,EAAKF,OAAOG,EAAK,IAAIH,OAAO,OAGxCP,EAASS,EAKb,GAAGT,EAAOM,SAAS,UAAM,CAErB,IAAII,EACAD,EAAO,GACX,IAFIC,EAAOV,EAAOW,MAAM,cAEhBP,OAAO,EAAE,CACjB,IAAI,IAAID,EAAI,EAAGA,EAAGO,EAAKN,OAAO,EAAGD,IAC7BM,EAAOA,EAAKF,OAAOG,EAAKP,IAAII,OAAO,OAInCE,EADGC,EAAKA,EAAKN,OAAO,GAAGE,SAAS,UACzBG,EAAKF,OAAOG,EAAKA,EAAKN,OAAO,GAAGG,OAAO,QAEvCE,EAAKF,OAAOG,EAAKA,EAAKN,OAAO,SAEzCK,EAAQA,EAAKF,OAAOG,EAAK,IAAIH,OAAO,OAGvCP,EAASS,EAKT,OAAOT,E,oGC9HUY,MA/BjB,cAAiCC,IAAMC,UAGrCC,sBAAsBC,GACpB,QAASA,EAAUC,MAAMb,SAAWc,KAAKzD,MAAMwD,MAAMb,QAGrDe,SACE,OACE,kBAACxD,EAAA,EAAD,CAAMC,MAAS,CAACC,KAAM,GAAtB,qCACA,kBAACiB,EAAA,EAAD,CAAkBE,QAAS,KAAKkC,KAAKzD,MAAM2D,YAAYF,KAAKzD,MAAM4D,MAAM,IAAxE,qCACA,kBAAC,IAAD,CACIC,YACE,kBAACxC,EAAA,EAAD,CAAkBE,QAAW,IAAIkC,KAAKzD,MAAM8D,eAAeL,KAAKzD,MAAM4D,MAAOzD,MAAS,CAAC4D,MAAQ,MAAQ1D,eAAgB,SAAUC,WAAY,UAA7I,qCACA,kBAAC0D,EAAA,EAAD,CAAQxD,KAAQ,wBAAyBE,KAAQ,GAAID,MAAS,UAA9D,uCAIFwD,WAAc,CAACC,cAAc,GAC7BjE,MAASwD,KAAKzD,MAAM4D,KACpBO,cAAiB,CAAC1D,MAAO,QACzB2D,eAAkB,CAACnD,gBAAiBwC,KAAKzD,MAAMwD,MAAMb,OAAS,UAAW,WACzE0B,SAAYZ,KAAKzD,MAAMwD,MAAMb,OAASc,KAAKzD,MAAMwD,MAAQ,cAX7D,0C,6ECfO,SAASc,EAAStE,GAE7B,IAAMuE,EAAQC,IAAWC,eAEnBC,EAAY,CACdC,SAAS,GAAGJ,EACZ9D,MAAO,YAINmE,EAASC,GAAcC,mBAAS,KAChCC,EAAUC,GAAcF,oBAAS,GA+EtC,OAxBAG,oBAAU,KACND,GAAW,GACX,IAYUE,EAAO,CAAEC,MAFD,6CALPpC,EAAU/C,EAAMQ,MAK8C,MAK/D4E,EAAO,CAAEC,OAAQ,OAAQD,KAAME,KAAKC,UAAUL,GAAOM,QAflD,CACT,OAAU,mBACV,eAAgB,qBAchBC,MAFY,iDAEDL,GAAMM,KAAKC,GAAYA,EAASC,QAAQF,KAAKG,IAAkBhB,EAAWgB,EAAa,IAAKb,GAAW,KAC7Gc,MAAMC,IAAWlB,EAAW,SAEtC,IAGEE,EA4FD,kBAAC7E,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,GAAI4F,UAAW,GAAI/E,gBAAiB,UAAWX,WAAW,SAAUD,eAAe,UAAxG,sCACQ,kBAAC4F,EAAA,EAAD,CAAmBvF,KAAO,QAAQD,MAAQ,UAA1C,wCA3FLmE,EAIC,kBAAC1E,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,GAAI4F,UAAW,GAAI/E,gBAAiB,WAAzD,sCAGI,kBAACf,EAAA,EAAD,CAAMC,MAAO,CAAEc,gBAAiB,WAAhC,sCACI,kBAACf,EAAA,EAAD,CAAMC,MAAO,CAAEa,cAAe,MAAOX,eAAgB,iBAArD,sCAEI,kBAACgB,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAG8F,YAAa,MAAQ3E,QAAS,IAAMvB,EAAMmG,aAA9E,sCACI,kBAACnC,EAAA,EAAD,CAAQxD,KAAM,2BAA4BE,KAAM,GAAG6D,EAAO9D,MAAO,UAAjE,wCAEJ,kBAACP,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,eAAgB,SAAUC,WAAY,UAA9D,sCACI,kBAAC8F,EAAA,EAAD,CAAMjG,MAAO,CAAEM,MAAO,QAASkE,SAAU,GAAGJ,GAA5C,sCAAsDK,EAAQyB,OAElE,kBAAChF,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAGkG,aAAc,MAAQ/E,QAAS,IAAMvB,EAAMuG,aAAavG,EAAMwG,SAAUxG,EAAMQ,MAAlH,sCACI,kBAACD,EAAA,EAAD,CAAWC,KAAMR,EAAMwG,SAAW,QAAU,SAAU9F,KAAM,GAAG6D,EAAO9D,MAAO,UAA7E,0CAQZ,kBAACP,EAAA,EAAD,CAAMC,MAAO,CAAE+F,YAAa,KAAMI,aAAa,KAAMG,WAAW,KAAMxF,gBAAiB,WAAvF,sCAEI,kBAACf,EAAA,EAAD,CAAMC,MAAS,CAACuG,YAAY,SAAUC,YAAY,GAAlD,sCACA,kBAACzG,EAAA,EAAD,CAAMC,MAAS,CAAC+F,YAAY,KAAMI,aAAa,MAA/C,sCAEA,kBAACF,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,wDAAwCE,EAAQgC,aAChD,kBAACR,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,oDAAoCE,EAAQiC,UAC5C,kBAACT,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,qDAAqCE,EAAQkC,UAC7C,kBAACV,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,qDAAqCE,EAAQmC,UAC7C,kBAACX,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,uDAAuCE,EAAQoC,aAC/C,kBAACZ,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,kDAAkCE,EAAQqC,QAC1C,kBAACb,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,uDAAuCE,EAAQsC,WAC/C,kBAACd,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,yDAAyCE,EAAQuC,cACjD,kBAACf,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,kDAAkCE,EAAQwC,QAC1C,kBAAChB,EAAA,EAAD,CAAMjG,MAAOuE,EAAb,mDAAmCE,EAAQyC,SAE3C,kBAACjB,EAAA,EAAD,CAAMjG,MAASuE,EAAf,uCAEA,kBAAC0B,EAAA,EAAD,CAAMjG,MAAQuE,EAAd,oDAjGhB,SAAsB2B,GAClB,IAAIiB,EAAY,GAahB,GAXe,MAAZjB,EAAKkB,MAAYD,EAAUE,KAAK,QACpB,MAAZnB,EAAKoB,MAAYH,EAAUE,KAAK,QACpB,MAAZnB,EAAKqB,MAAYJ,EAAUE,KAAK,QAClB,MAAdnB,EAAKsB,QAAcL,EAAUE,KAAK,UACvB,MAAXnB,EAAKuB,KAAWN,EAAUE,KAAK,OACjB,MAAdnB,EAAKwB,QAAcP,EAAUE,KAAK,UAClB,MAAhBnB,EAAKyB,UAAgBR,EAAUE,KAAK,YACxB,MAAZnB,EAAK0B,MAAYT,EAAUE,KAAK,QACf,MAAjBnB,EAAK2B,WAAiBV,EAAUE,KAAK,aACtB,MAAfnB,EAAK4B,SAAeX,EAAUE,KAAK,WAElCF,EAAU3E,OAEV,CAEH,IADG,IAAIuF,EAAM,GACLxF,EAAG,EAAGA,EAAE4E,EAAU3E,OAAO,EAAGD,IACnCwF,EAAKA,EAAIpF,OAAOwE,EAAU5E,GAAK,MAGhC,OADAwF,EAAMA,EAAIpF,OAAOwE,EAAUA,EAAU3E,OAAO,IAN7C,MAAO,OAkF2CwF,CAAavD,IACnD,kBAACwB,EAAA,EAAD,CAAMjG,MAASuE,EAAf,uCACA,kBAAC0B,EAAA,EAAD,CAAMjG,MAASuE,EAAf,kDA5HhB,SAAoB2B,GAChB,IAAI+B,EAAO,GAUX,GARqB,MAAlB/B,EAAKgC,YAAkBD,EAAKZ,KAAK,cACtB,MAAXnB,EAAKiC,KAAWF,EAAKZ,KAAK,SACP,MAAnBnB,EAAKkC,aAAmBH,EAAKZ,KAAK,eAChB,MAAlBnB,EAAKmC,YAAkBJ,EAAKZ,KAAK,cACpB,MAAbnB,EAAKoC,OAAaL,EAAKZ,KAAK,SACN,MAAtBnB,EAAKqC,gBAAsBN,EAAKZ,KAAK,mBACxB,MAAbnB,EAAKsC,OAAaP,EAAKZ,KAAK,SAE3BY,EAAKzF,OAEL,CAEH,IADG,IAAIuF,EAAM,GACLxF,EAAG,EAAGA,EAAE0F,EAAKzF,OAAO,EAAGD,IAC9BwF,EAAKA,EAAIpF,OAAOsF,EAAK1F,GAAK,MAG3B,OADAwF,EAAMA,EAAIpF,OAAOsF,EAAKA,EAAKzF,OAAO,IANnC,MAAO,OAgH0CiG,CAAWhE,MAGhD,kBAACwB,EAAA,EAAD,CAAMjG,MAASuE,EAAf,uCACA,kBAAC0B,EAAA,EAAD,CAAMjG,MAASuE,EAAf,uCAEA,kBAAC0B,EAAA,EAAD,CAAMjG,MAASuE,EAAf,kKACA,kBAAC0B,EAAA,EAAD,CAAMjG,MAASuE,EAAf,yCAWR,kBAACxE,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,GAAI4F,UAAW,GAAI/E,gBAAiB,WAAzD,sCAGI,kBAACf,EAAA,EAAD,CAAMC,MAAO,CAAEc,gBAAiB,WAAhC,sCACI,kBAACf,EAAA,EAAD,CAAMC,MAAO,CAAEa,cAAe,MAAOX,eAAgB,iBAArD,sCAEI,kBAACgB,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAG8F,YAAa,MAAQ3E,QAAS,IAAMvB,EAAMmG,aAA9E,sCACI,kBAACnC,EAAA,EAAD,CAAQxD,KAAM,2BAA4BE,KAAM,GAAG6D,EAAO9D,MAAO,UAAjE,wCAEJ,kBAACP,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,eAAgB,SAAUC,WAAY,UAA9D,sCACI,kBAAC8F,EAAA,EAAD,CAAMjG,MAAO,CAAEM,MAAO,QAASkE,SAAU,GAAGJ,GAA5C,sDAEJ,kBAAClD,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAGkG,aAAc,MAAQ/E,QAAS,IAAMvB,EAAMuG,aAAavG,EAAMwG,SAAUxG,EAAMQ,MAAlH,sCAEI,kBAACD,EAAA,EAAD,CAAWC,KAAMR,EAAMwG,SAAW,QAAU,SAAU9F,KAAM,GAAG6D,EAAO9D,MAAO,UAA7E,2C,qGCzKb,SAASoI,EAAkB7I,GAsBxC,OAhBA8I,gBAAkB,IAEd,kBAAC5I,EAAA,EAAD,CACEC,MAAO,CACL4I,OAAQ,EACRhF,MAAO,OACP9C,gBAAiB,WAJrB,sCAeF,kBAACf,EAAA,EAAD,sCACE,kBAACA,EAAA,EAAD,CAAMC,MAAO,CAAE4D,MAAO,OAAQ2C,YAAY,UAAWsC,kBAAkB,GAAvE,qCACI,kBAAC,IAAD,CACAC,sBAAwB,CAAC5I,eAAe,SAAUC,WAAW,UAC7DL,MAAOD,EAAMkJ,aAAaC,UAC1BC,WAAc,CAAC3I,MAAQ,WAHvB,uCAMHqI,kBACN,kBAAC5I,EAAA,EAAD,CAAMC,MAAO,CAAE4D,MAAO,QAAtB,qCACO,kBAACsF,EAAA,EAAD,CACEC,cAAc,OACdC,eAAgB,EAChBhI,QAAS,KAAOvB,EAAMkJ,aAAaM,SAAWxJ,EAAMuG,cAAgBvG,EAAMyJ,YAH5E,qCAKE,kBAAC,IAAD,CACAR,sBAAwB,CAAC5I,eAAe,SAAUC,WAAW,UAC7DL,MAAOD,EAAMkJ,aAAaM,SAAU,wBAA0B,OAC9DJ,WAAc,CAAC3I,MAAQ,WAHvB,wCAQHqI,kBAED,kBAAC5I,EAAA,EAAD,CAAMC,MAAO,CAAE4D,MAAO,QAAtB,qCACE,kBAACsF,EAAA,EAAD,CACEC,cAAc,OACdC,eAAgB,EAChBhI,QAAS,OAHX,qCAKE,kBAAC,IAAD,CACA0H,sBAAwB,CAAC5I,eAAe,SAAUC,WAAW,UAC7DL,MAAO,oCACPmJ,WAAc,CAAE3I,MAAO,WAHvB,yC,m3BC7CK,SAASiJ,EAAU1J,GAgFhC,OA3ECqG,KAAMsD,SAAW7E,mBAAS,KAC1BoE,aAAcU,iBAAmB9E,mBAAS,CAAEqE,UAAW,GAAIK,UAAU,EAAMK,WAAW,IAGvFf,gBAAkB,IAEd,kBAAC5I,EAAA,EAAD,CACEC,MAAO,CACL4I,OAAQ,EACRhF,MAAO,OACP9C,gBAAiB,WAJrB,sCAaJ6I,YAAe,IASb,IAT2B,IAAd,KAAElG,GAAW,EAEtBmG,EAAI,GACJC,EAAI,GACJC,EAAI,GACJC,EAAK,GACLC,EAAK,GACL3G,EAAQ,GAEHd,EAAI,EAAGA,EAAI1C,EAAMoK,KAAKzH,OAAQD,IACrC,GAAIkB,IAAS5D,EAAMoK,KAAK1H,GAAG2D,KACzB,OAAQrG,EAAMoK,KAAK1H,GAAG2H,MACpB,IAAM,YACJN,EAAEvC,KAAKxH,EAAMoK,KAAK1H,GAAGE,MACrB,MAEF,IAAM,QACJoH,EAAExC,KAAKxH,EAAMoK,KAAK1H,GAAGE,MACrB,MAEF,IAAM,SACJqH,EAAEzC,KAAKxH,EAAMoK,KAAK1H,GAAGE,MACrB,MAEF,IAAM,aACJsH,EAAG1C,KAAKxH,EAAMoK,KAAK1H,GAAGE,MACtB,MAEF,IAAM,cACJuH,EAAG3C,KAAKxH,EAAMoK,KAAK1H,GAAGE,MAuB9B,OALAY,GANAA,EAAQA,EAAMV,OACZiH,EAAEpH,OAAS,EAAI,cAAgBN,EAAc0H,GAAK,KAAO,IAAIjH,OAC3DkH,EAAErH,OAAS,EAAI,UAAYN,EAAc2H,GAAK,KAAO,IAAIlH,OACvDmH,EAAEtH,OAAS,EAAI,WAAaN,EAAc4H,GAAK,KAAO,IAAInH,OACxDoH,EAAGvH,OAAS,EAAI,eAAiBN,EAAc6H,GAAM,KAAO,IAAIpH,OAChEqH,EAAGxH,OAAS,EAAI,gBAAkBN,EAAc8H,GAAM,KAAO,KACvDG,UAAU,EAAG9G,EAAMb,OAAS,GAKlC,kBAAC,EAAD,CAAoBmB,eAAiBF,GAASgG,gBAAgB,CAAEJ,UAAU,EAAML,UAAWvF,EAAMiG,WAAW,IAASlG,YAAa,CAAC4G,EAAUC,KAAWxK,EAAM2D,YAAY4G,EAAUC,IAAUhH,MAAOA,EAAOI,KAAMA,EAAlN,uCAKR,kBAAC1D,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,GAAIC,eAAgB,SAAUoK,UAAW,UAA9D,qCAGE,kBAAC,IAAD,CACEC,UAAW1K,EAAM2K,UAAUd,UAC3Be,gBAAiB,IAAM5K,EAAMmG,aAC7B0E,eAAe,OACfC,cAAe,UACfC,gBAAiB,EACjB5K,MAAO,CAAEC,KAAM,EAAG4K,OAAQ,EAAG3K,eAAgB,YAN/C,qCAQE,kBAACiE,EAAD,CACE9D,KAAMR,EAAM2K,UAAUxB,UACtBhD,WAAY,IAAMnG,EAAMmG,aACxBK,SAAUxG,EAAM2K,UAAUnB,SAC1BjD,YAAa,CAAC0E,EAASV,KAAevK,EAAMkL,iBAAiBD,EAASV,IAJxE,wCAOF,kBAAC,IAAD,CACEG,UAAWxB,aAAaW,UACxBe,gBAAiB,IAAMhB,gBAAgB,EAAD,GAAMuB,MAAN,CAAatB,WAAW,KAC9DuB,gBAAiB,IAAMxB,gBAAgB,EAAD,GAAMuB,MAAN,CAAatB,WAAW,KAC9DgB,eAAe,OACf1K,MAAO,CAAEE,eAAgB,WAAY2K,OAAQ,GAL/C,sCAYE,kBAAC,EAAD,CACEzE,YAAa,KAAQvG,EAAMuG,aAAa2C,aAAaM,SAAUN,aAAaC,WAAYS,gBAAgB,EAAD,GAAMV,aAAN,CAAoBM,UAAU,MACrIC,SAAU,KAAQzJ,EAAMuG,aAAa2C,aAAaM,SAAUN,aAAaC,WAAYS,gBAAgB,EAAD,GAAMV,aAAN,CAAoBM,UAAU,MAClIN,aAAcA,aAAcmC,OAAQ,CAAC,CAAE7K,KAAM,wBAAyB8K,SAAU,GAAK,CAAE9K,KAAM,sBAAuB8K,SAAU,GAAK,CAAE9K,KAAM,oCAAqC8K,SAAU,IAH5L,wCASF,kBAACpL,EAAA,EAAD,CAAMC,MAAO,CAAEc,gBAAiB,UAAWZ,eAAe,SAAUC,WAAW,UAA/E,sCACE,kBAACJ,EAAA,EAAD,CAAMC,MAAO,CAAEa,cAAe,MAAOX,eAAgB,gBAAiBC,WAAY,UAAlF,sCAEE,kBAACe,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAG8F,YAAa,MAAQ3E,QAAS,OAAlE,uCAEA,kBAACrB,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGC,eAAgB,SAAUC,WAAY,SAAUiL,aAAc,UAAtF,sCACE,kBAACnF,EAAA,EAAD,CAAMjG,MAAO,CAAEM,MAAO,QAAS+K,WAAY,cAAe7G,SAAU,GAAGH,IAAWC,gBAAlF,sCAAqG,cAEvG,kBAACpD,EAAA,EAAD,CAAkBlB,MAAO,CAAEC,KAAM,EAAGkG,aAAc,MAChD/E,QAAS,IAAMkK,IAAMC,MACnB,wBAAyB,GACzB,CAAC,CAAEC,KAAM,MAAOpK,QAAQ,WAAD,I,EAAA,G,EAAE,kBAA0BqK,IAAaC,WAAW,kBAAmB7L,EAAM8L,Y,+KAA7E,kDAAC,GAA0F3L,MAAO,UACzH,CAAEwL,KAAM,YAJZ,sCAKE,kBAACI,EAAA,EAAD,CAAavL,KAAM,QAASE,KAAM,GAAK8D,IAAWC,eAAgBhE,MAAO,UAAzE,0CAIN,kBAACP,EAAA,EAAD,CAAMC,MAAO,CAAEc,gBAAiB,UAAW8C,MAAO,OAAQgF,OAAQ,GAAlE,uCACA,kBAAC7I,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAK,IAApB,sCACE,kBAAC4L,EAAA,EAAD,CAEEC,uBAAuB,EAEvBC,uBAAwBpD,gBACxB5D,KAAMlF,EAAMmM,SACZC,WAAYtC,YACZuC,aAAc,CAACzI,EAAM0I,IAAU1I,EAPjC,yC,yFCrJF2I,EAAK/H,IAAWC,eAEhB+H,EAAY,CAChB7H,SAAe,GAAL4H,GAENE,EAAa,CACjB9H,SAAe,GAAL4H,GAGZ,SAASG,EAASC,GAChB,IAEIrK,EAFUqK,EAAK3K,WAECkB,MAAM,IAG1B,MAFgB,CAACZ,EAAM,GAAIA,EAAM,GAAI,IAAKA,EAAM,GAAIA,EAAM,GAAI,IAAKA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC7EsK,KAAK,IAIlB,SAASC,EAAS7M,GAM/B,OAHC8M,YAAa9H,YAAcF,oBAAS,GAAO,GAI1C,kBAAC5E,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,IAArB,qCACE,kBAACF,EAAA,EAAD,CAAMC,MAAO,CAAEsG,WAAY,KAAMrG,KAAM,EAAGC,eAAgB,SAAUkL,aAAc,SAAUjL,WAAY,UAAxG,qCACE,kBAAC8F,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,mDAAoCE,EAAS1M,EAAM+M,WACnD,kBAAC3G,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,qDAAsCE,EAAShL,MAC/C,kBAAC2J,EAAA,EAAD,CAAQ5K,MAAM,UAAUR,MAAO,cAAesB,QAAS,KAAQyD,WAAW,EAAC,GAAM,IAASgI,WAAW,KAAQhN,EAAMiN,aAAcjI,WAAW,EAAC,GAAO,KAAU,MAA9J,sCAEA,kBAAC9E,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,GAArB,qCAGI0M,YAAY,GACV,kBAAC7G,EAAA,EAAD,CAAmBvF,KAAK,QAAQD,MAAM,UAAtC,sCAEAqM,YAAY,GACV,kBAAC1G,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,sDAEA,kBAACtM,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,GAArB,wCAIV,kBAACF,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAG8F,YAAa,KAAMI,aAAc,MAAzD,qCACE,kBAACpG,EAAA,EAAD,CAAMC,MAAO,CAAEoL,aAAc,SAAUlL,eAAgB,SAAUC,WAAY,UAA7E,qCAEE,kBAAC8F,EAAA,EAAD,CAAMjG,MAAOsM,EAAb,4DAEF,kBAACrG,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,sCACA,kBAACpG,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,wDACA,kBAACpG,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,6DACA,kBAACpG,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,kEACA,kBAACpG,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,mFACA,kBAACpG,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,sCACA,kBAACtM,EAAA,EAAD,CAAMC,MAAO,CAAEoL,aAAc,SAAUlL,eAAgB,SAAUC,WAAY,UAA7E,qCACE,kBAAC8F,EAAA,EAAD,CAAMjG,MAAOsM,EAAb,4EACA,kBAACS,EAAA,EAAD,CAAWC,UAAU,EAAOC,WAAW,EAAMjN,MAAO,CAAEwE,SAAU,GAAK4H,EAAI9L,MAAO,OAAhF,+DAEF,kBAAC2F,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,sCAEA,kBAACpG,EAAA,EAAD,CAAMjG,MAAOqM,EAAb,uCAGA,kBAACtM,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,IAAnB,qCACA,kBAAC8M,EAAA,EAAD,CAAW/M,MAAOqM,EAAWW,UAAU,EAAOC,WAAW,EAAzD,2G,6EC/DFb,EAAW,GADH/H,IAAWC,eAsEV4I,MAlDf,cAA2BjK,IAAMC,UAAW,cAAD,yBAQzCiK,UAAU,KACR7J,KAAKzD,MAAM2D,YAAYF,KAAKzD,MAAM4D,KAAKyC,KAAM5C,KAAKzD,MAAMwG,WATjB,KAYzC+G,SAAU,KACR9J,KAAKzD,MAAMwN,QAAQ/J,KAAKzD,MAAMwG,WAVhClD,sBAAsBC,GACpB,QAASA,EAAUiD,WAAa/C,KAAKzD,MAAMwG,UAY7C9C,SACE,OACE,kBAACxD,EAAA,EAAD,CACAC,MAAO,CAAEC,KAAM,GADf,qCAGGqD,KAAKzD,MAAMyN,eACV,kBAACvN,EAAA,EAAD,CAAMC,MAAS,CAACE,eAAe,SAAUC,WAAW,SAAUW,gBAAgB,WAA9E,qCACA,kBAACmF,EAAA,EAAD,CAAMjG,MAAS,CAACC,KAAK,EAAGuE,SAAS4H,EAAIf,WAAW,cAAe/K,MAAM,SAArE,qCAAgFgD,KAAKzD,MAAM0N,kBAGzF,KAEJ,kBAACrM,EAAA,EAAD,CAAkBE,QAASkC,KAAK6J,UAAhC,qCACE,kBAAC,IAAD,CACEzJ,YACE,kBAACxC,EAAA,EAAD,CACEE,QAASkC,KAAK8J,SACdpN,MAAO,CAAE4D,MAAO,MAAO1D,eAAgB,SAAUC,WAAY,UAF/D,qCAGE,kBAACC,EAAA,EAAD,CAAWC,KAAMiD,KAAKzD,MAAMwG,SAAW,QAAU,SAAU9F,KAAM,GAAID,MAAO,UAA5E,uCAGJwD,WAAY,CAAEC,cAAe,GAC7BkF,WAAY,CAAE3I,MAAO,SACrBR,MAAOwD,KAAKzD,MAAM4D,KAAKyC,KACvBhC,SAAUZ,KAAKzD,MAAM4D,KAAKhB,KAAO,MAAQa,KAAKzD,MAAM4D,KAAKyG,KAAO,MAAQ5G,KAAKzD,MAAM4D,KAAK+J,SACxFxJ,cAAe,CAAE1D,MAAO,QAZ1B,0C,qEChDNiN,GAFUlJ,IAAWC,eAEH,QAGP,MAAMmJ,WAAiBxK,IAAMyK,cAAe,cAAD,yBAExDC,kBAAmB,KACjBJ,EAAkB,QAHoC,KAMxD5E,gBAAkB,IAEd,kBAAC5I,EAAA,EAAD,CACEC,MAAO,CACL4I,OAAQ,EACRhF,MAAO,OACP9C,gBAAiB,WAJrB,sCARoD,KAoBxD8M,aAAe,IACVhJ,QACM,kBAACkB,EAAA,EAAD,CAAoBvF,KAAO,QAAQD,MAAQ,UAA3C,sCAEA,KAxB6C,KA4BxDqJ,YAAe,IAAc,IAAd,KAAElG,GAAW,EAGtB6J,GAAe,EAGnB7J,EAAK4C,UAAW,EAEhB,IAAK,IAAI9D,EAAI,EAAGA,EAAIe,KAAKzD,MAAMmM,SAASxJ,OAAQD,IAE9C,GAAIe,KAAKzD,MAAMmM,SAASzJ,KAAOkB,EAAKyC,KAAM,CACxCzC,EAAK4C,UAAW,EAChB,MASJ,OAJKkH,IAAoB9J,EAAK+J,WAC5BD,EAAkB9J,EAAK+J,SACvBF,GAAe,GAIf,kBAAC,EAAD,CAAcA,eAAkBA,EAAgBC,gBAAmBA,EAAiB/J,YAAa,CAAC4G,EAAU/D,IAAa/C,KAAKzD,MAAM2D,YAAY4G,EAAU/D,GAAWgH,OAASvC,GAAYxH,KAAKzD,MAAMuG,YAAY0E,EAASrH,EAAKyC,MAAOzC,KAAMA,EAAM4C,SAAU5C,EAAK4C,SAAjQ,uCAQJ9C,SACI,OACE,kBAACxD,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,GAArB,qCACM,kBAAC4L,EAAA,EAAD,CAEEC,uBAAuB,EACvBC,uBAAwBzI,KAAKqF,gBAC7B5D,KAAMzB,KAAKzD,MAAMgO,SACjB5B,WAAY3I,KAAKqG,YACjBuC,aAAc,CAACzI,EAAM0I,IAAU1I,EAAKyC,KAAOzC,EAAKhB,KAAOgB,EAAK+J,SAAW/J,EAAKyG,KAC5E4D,UAAWxK,KAAKzD,MAAMmM,SACtB+B,WAAc,GACdC,mBAAuB,kBAACjO,EAAA,EAAD,CAAMC,MAAO,CAAEG,WAAY,SAAUmG,WAAY,MAAjD,qCAAyD,kBAACL,EAAA,EAAD,sDATlF,wC,mFClEC,SAASyC,GAAkB7I,GAExC,IAAMuE,EAAQC,IAAWC,eAoDzB,OAnDC2J,SAAUC,gBAAkBvJ,mBAAS9E,EAAMoO,UAK5CtF,gBAAkB,IAEd,kBAAC5I,EAAA,EAAD,CACEC,MAAO,CACL4I,OAAQ,EACRhF,MAAO,OACP9C,gBAAiB,WAJrB,uCAWJqN,WAAa,CAAChM,EAAO9B,KAEnB8B,EAAMkF,KAAKhH,GACX+N,SAAWjM,EACJiM,UAGTnC,WAAc,IAAc,IAAd,KAAExI,GAAW,EACzB,OACE,kBAAC1D,EAAA,EAAD,CAAMC,MAAO,CAAE4D,MAAO,QAAtB,sCACE,kBAACsF,EAAA,EAAD,CACEC,cAAc,OACdC,eAAgB,EAChBhI,QAAS,KAAY6M,SAASvL,SAASe,IAAS4K,gBAAkBJ,SAASK,OAAOjO,KAAUA,IAASoD,IAAQyK,eAAeG,iBAAkBxO,EAAM0O,aAAaF,mBAA0BA,gBAAkBJ,SAAStL,OAAO,CAACc,IAAQyK,eAAeD,SAAStL,OAAO,CAACc,KAAS5D,EAAM0O,aAAaF,mBAHpS,sCAKE,kBAAC,IAAD,CAAUvO,MAAO2D,EAEfC,YAEEuK,SAASvL,SAASe,GAEhB,kBAACrD,EAAA,EAAD,CAAWC,KAAM,cAAeE,KAAM,GAAK6D,EAAO9D,MAAO,UAAzD,uCAEA,KARN,0CAmBN,kBAACP,EAAA,EAAD,uCACE,kBAACA,EAAA,EAAD,CAAMC,MAAO,CAAE4D,MAAO,QAAtB,sCACE,kBAACsF,EAAA,EAAD,CACEC,cAAc,OACdC,eAAgB,EAChBhI,QAAS,KAAQ8M,eAAerO,EAAM2O,SAAU3O,EAAM0O,aAAa1O,EAAM2O,UAH3E,sCAKE,kBAAC,IAAD,CAAU1O,MAAO,MAAjB,wCAKD6I,mBAIH,kBAACkD,EAAA,EAAD,CACEE,uBAAwBzI,KAAKqF,gBAC7B5D,KAAMlF,EAAM2O,QACZvC,WAAY3I,KAAK2I,WACjBC,aAAc,CAACzI,EAAM0I,IAAU1I,EAJjC,wC,2FCvES,SAASgL,GAA0B5O,GAEhD,IAAMuE,EAAQC,IAAWC,eAsDzB,OArDC2J,SAAUC,gBAAkBvJ,mBAAS9E,EAAMoO,UAK5CtF,gBAAkB,IAEd,kBAAC5I,EAAA,EAAD,CACEC,MAAO,CACL4I,OAAQ,EACRhF,MAAO,OACP9C,gBAAiB,WAJrB,uCAWJqN,WAAa,CAAChM,EAAO9B,KAEnB8B,EAAMkF,KAAKhH,GACX+N,SAAWjM,EACJiM,UAGTnC,WAAc,IAAc,IAAd,KAAExI,GAAW,EACzB,OACE,kBAAC1D,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,UAAnB,sCACE,kBAACiJ,EAAA,EAAD,CACEC,cAAc,OACdC,eAAgB,EAChBhI,QAAS,KAAY6M,SAASvL,SAASe,IAAS4K,gBAAkBJ,SAASK,OAAOjO,KAAUA,IAASoD,IAAQyK,eAAeG,iBAAkBxO,EAAM0O,aAAaF,mBAA0BA,gBAAkBJ,SAAStL,OAAO,CAACc,IAAQyK,eAAeD,SAAStL,OAAO,CAACc,KAAS5D,EAAM0O,aAAaF,mBAHpS,sCAKE,kBAAC,IAAD,CAAUvO,MAAO2D,EACfK,WAAY,CAAEC,cAAc,GAE5BL,YAEEuK,SAASvL,SAASe,GAEhB,kBAACrD,EAAA,EAAD,CAAWC,KAAM,cAAeE,KAAM,GAAK6D,EAAO9D,MAAO,UAAzD,uCAGA,KAVN,0CAqBN,kBAACP,EAAA,EAAD,CAAMC,OAAK,EAAX,sCACE,kBAACD,EAAA,EAAD,CAAMC,MAAO,CAAC4D,MAAM,QAApB,sCACE,kBAACsF,EAAA,EAAD,CACEC,cAAc,OACdC,eAAgB,EAChBhI,QAAS,KAAQ8M,eAAerO,EAAM2O,SAAU3O,EAAM0O,aAAa1O,EAAM2O,UAH3E,sCAKE,kBAAC,IAAD,CAAUvF,WAAc,CAACmC,aAAa,SAAUlL,eAAe,UAC/DJ,MAAO,MADP,wCAMD6I,mBAGD,kBAAC5I,EAAA,EAAD,CAAMC,MAAS,CAACc,gBAAgB,WAAhC,sCACF,kBAAC+K,EAAA,EAAD,CACEE,uBAAwBzI,KAAKqF,gBAC7B5D,KAAMlF,EAAM2O,QACZvC,WAAY3I,KAAK2I,WACjBC,aAAc,CAACzI,EAAM0I,IAAU1I,EAC/BiL,WAAY,EALd,yC,+ECvES,MAAMC,WAAsB1L,IAAMC,UAAW,cAAD,yBAEzD0L,MAAQ,CAENC,eAAgB,KAChBZ,SAAU3K,KAAKzD,MAAMoO,UALkC,KAWzDa,QAAU,KAGRxL,KAAKyL,SAAS,CAAEC,aAAc,QAGhCzL,SAEE,OACE,kBAACxD,EAAA,EAAD,CAAMC,MAAOiP,GAAOC,UAApB,sCAIE,kBAAChO,EAAA,EAAD,CACElB,MAAO,CAAE4D,MAAO,OAAQgF,OAAQ,GAAIrC,YAAa,UAAWC,YAAa,EAAG2I,gBAAiB,GAAIC,iBAAkB,GAAIpO,eAAgB,EAAGd,eAAgB,SAAUC,WAAY,UAChLiB,QAAS,IAAMkC,KAAKyL,SAAS,CAAEC,aAAc,WAF/C,sCAIE,kBAAC/I,EAAA,EAAD,CAAMjG,MAAO,CAAEwE,SAAU,GAAGH,IAAWC,eAAgBhE,MAAO,WAA9D,sCAA4EgD,KAAKzD,MAAMwP,QAEzF,kBAAC,IAAD,CACEpE,gBAAiB3H,KAAKwL,QACtBvE,UAAuC,WAA5BjH,KAAKsL,MAAMI,aACtBvE,gBAAiBnH,KAAKwL,QACtBpE,eAAgB,CAAC,QACjB1K,MAAOiP,GAAOK,YACdC,OAAU,IAAIjM,KAAKyL,SAAS,CAACd,SAAU,KANzC,sCAUuB,QAAnB3K,KAAKzD,MAAM2P,MACP,kBAACf,GAAD,CAA2BD,QAASlL,KAAKzD,MAAM2O,QAASP,SAAU3K,KAAKsL,MAAMX,SAAUM,aAAekB,IAAmBnM,KAAKzD,MAAM0O,aAAakB,IAAjJ,uCAEF,kBAAC,GAAD,CAAmBjB,QAASlL,KAAKzD,MAAM2O,QAASP,SAAU3K,KAAKsL,MAAMX,SAAUM,aAAekB,IAAmBnM,KAAKzD,MAAM0O,aAAakB,IAAzI,0CAgBd,IAAMR,GAASS,IAAWC,OAAO,CAC/BT,UAAW,CACTjP,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZW,gBAAiB,WAGnB8O,QAAS,GAETN,YAAa,CAGXpP,eAAgB,WAChB2K,OAAQ,K,oEC3DG,SAASgF,GAAOhQ,GAI3B,IAEIiQ,EAAgBjQ,EAAMkQ,eAG1B,OACI,kBAAChQ,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,IAArB,sCACI,kBAAC,IAAD,CAEIsK,UAAW1K,EAAM2K,UAAUd,UAE3Be,gBAAiB,IAAM5K,EAAMmG,aAC7B0E,eAAe,OACfC,cAAe,UACfC,gBAAiB,EACjB5K,MAAO,CAAEC,KAAM,EAAG4K,OAAQ,GAR9B,sCAUI,kBAAC1G,EAAD,CACIiC,YAAa,CAAC0E,EAASV,KAAevK,EAAMkL,iBAAiBD,EAASV,IACtE/J,KAAMR,EAAM2K,UAAUxB,UACtBhD,WAAY,IAAMnG,EAAMmG,aACxBK,SAAUxG,EAAM2K,UAAUnB,SAJ9B,wCAQJ,kBAAC,IAAD,CAAW2G,aAAc,EAAOC,OAAO,EAAMC,SAAS,UAAUC,YAAY,EAAMC,YAAY,sBAAsBC,aAAe7E,IAAW3L,EAAMwQ,aAAa7E,IAAS8E,MAAOzQ,EAAM0Q,WAAvL,uCACA,kBAACxQ,EAAA,EAAD,CAAMC,MAAO,CAAEa,cAAe,OAA9B,sCACI,kBAAC,GAAD,CAAeoN,SAAUuC,WAAYhC,QA1BjC,CAAC,YAAa,YAAa,WAAY,aA0BcD,aAAeN,GAAapO,EAAM4Q,kBAAkBxC,GAAWoB,MAAOxP,EAAM6Q,UAArI,uCACA,kBAAC,GAAD,CAAezC,SAAU0C,WAAYnC,QA5BjC,CAAC,YAAa,QAAS,SAAU,aAAc,eA4BMD,aAAeN,GAAapO,EAAM+Q,kBAAkB3C,GAAWoB,MAAOxP,EAAMgR,UAArI,uCACA,kBAAC,GAAD,CAAe5C,SAAU6C,eAAgBtC,QAASsB,EAAeN,MAAQ,MAAOjB,aAAeN,GAAapO,EAAMkR,uBAAuB9C,GAAWoB,MAAOxP,EAAMmR,cAAjK,wCAIJ,kBAAC,GAAD,CACIxN,YAAa,CAAC4G,EAAU/D,IAAaxG,EAAM2D,YAAY4G,EAAU/D,GACjEwH,SAAUhO,EAAMoR,aAChBjF,SAAUnM,EAAMqR,SAChB9K,YAAa,CAAC0E,EAASV,KAAevK,EAAMuG,YAAY0E,EAASV,IAJrE,wC,0jCCjDZ,IAAI+G,GAA6B,G,SAIlBC,G,iEAAf,UAAyBtG,EAASV,GAC9B,IAAMiH,QAAiB5F,IAAa6F,QAAQ,kBACxCC,EAAYpM,KAAKqM,MAAMH,GAEvBvG,GACKyG,IACDA,EAAY,IAUZA,EAAUlK,KAAK+C,GACfmH,EAAUE,OAEdC,QAAUvM,KAAKC,UAAUmM,SAGnB9F,IAAakG,QAAQ,iBAAkBD,WAI7CH,EAAYA,EAAUjD,OAAQgC,KAAYA,IAAUlG,IACpDsH,QAAUvM,KAAKC,UAAUmM,SACnB9F,IAAakG,QAAQ,iBAAkBD,UAEjDE,S,kDAKJ,YAEI,UACUnG,IAAa6F,QAAQ,cAAc/L,KAAKsM,GAAU1M,KAAKqM,MAAMK,IAAStM,KAAKsM,IAAYC,mBAAmBD,KAClH,MAAOjM,GACLlF,QAAQkF,MAAMA,Q,+BAKPgM,K,4DAAf,YACI,UACwBnG,IAAa6F,QAAQ,kBAAkB/L,KAAKsM,GAAUA,EAASE,WAAW5M,KAAKqM,MAAMK,IAAWE,WAAW,KACjI,MAAOnM,GACLlF,QAAQkF,MAAMA,Q,kDAOtB,UAAwBoM,GACpBF,mBAAmBE,GACnB,IACI,IAAIC,EAAa9M,KAAKC,UAAU4M,SAC1BvG,IAAakG,QAAQ,aAAcM,GAE3C,MAAOrM,GACLlF,QAAQkF,MAAMA,Q,sBAOP,SAASsM,GAAYrS,GAAO,SAmDxBsS,EAnDwB,oEAmDvC,UAAgCtE,EAAU0C,EAAYC,EAAYG,EAAYG,GAC1EjM,YAAW,SAhCf,SAAsBgJ,EAAU0C,EAAYC,EAAYG,EAAYG,GAChE,OAAO,IAAIsB,SAAQ,SAAUC,EAASC,GAElCC,iBAAiBhC,GAEjB,IAAIiC,EAAQ,IAAIC,OAAJ,aAAiB7P,EAAU2N,GAA3B,MAA4C,MAMlDmC,EAJQ7E,EAASS,OAAQ7J,GAAYA,EAAQyB,KAAKyM,MAAMH,IAE1ClE,OAAQ7J,IAAa+L,EAAWhO,QAASgO,EAAW9N,SAAS+B,EAAQhC,OAErE6L,OAAQ7J,IAAakM,EAAWnO,QAASmO,EAAWjO,SAAS+B,EAAQyF,OAEzFiH,GAA6BuB,EAE7B,IAAMlF,EAAWkF,EAAMpE,OAAQ7J,IAAaqM,EAAetO,QAASsO,EAAepO,SAAS+B,EAAQ+I,WAKpGsE,mBAAmBtE,GAKnB6E,GAAQ,MAQNO,CAAa/E,EAAU0C,EAAYC,EAAYG,EAAYG,GACjEjM,YAAW,OAtDwB,sBAyDvC,SAASrB,EAAY4G,EAAU/D,GAE3BwM,SAAS,CAAE7J,UAAWoB,EAAUV,WAAW,EAAML,SAAUhD,IA3DxB,SAkExByG,IAlEwB,yDAkEvC,YACI,IAAIN,EAAOjL,IAGLwD,EAAO,CAAEC,MADD,2BAA6BwH,EAAO,6BAI5CvH,EAAO,CAAEC,OAAQ,OAAQD,KAAME,KAAKC,UAAUL,IACpD,IACI,IAAIS,QAAiBF,MAHb,8CAGwBL,GAC5BS,QAAqBF,EAASC,Q,qCAClCqN,CAASpN,GACTqN,iBAAiBrN,GACjBsN,YAAYxG,GACZ3H,YAAW,GAEf,MAAOe,GAASlF,QAAQkF,MAAMA,QAlFK,sBAqFvC,SAASqN,IACLC,WAAa3R,IAETqL,UAAYsG,YACZpG,IACA8E,Q,oCAEAuB,GACAvB,MAiCR,OA5BCI,WAAYe,kBAAoBpO,mBAAS,KAGzCiI,SAAUoG,aAAerO,mBAAS,IAGlCuM,SAAUa,YAAcpN,mBAAS,KAGjCsM,aAAca,oBAAsBnN,mBAAS,KAG7C4L,WAAYgC,kBAAoB5N,mBAAS,KACzCgM,WAAYyC,kBAAoBzO,mBAAS,KACzC6L,WAAY6C,kBAAoB1O,mBAAS,KACzCmM,eAAgBwC,sBAAwB3O,mBAAS,KAIjDC,QAASC,YAAcF,oBAAS,IAIhCqG,MAAO6H,UAAYlO,mBAAS,CAAE+E,WAAW,EAAOV,UAAW,GAAIK,UAAU,IAE1EvE,oBAAU,IAAMmO,IAAW,IAGN,GAAjBpT,EAAMyB,QACC,kBAACd,KAAD,yCAIe,IAAlBX,EAAMyB,QAGC,kBAACuO,GAAD,CAEHjL,QAAWA,QAEX5E,MAAO,CAAEC,KAAM,GAGfoQ,aAAe7E,IAAU2G,EAAiBH,WAAYxG,EAAMgF,WAAYG,WAAYG,iBACpFP,WAAYA,WAGZxF,iBAAkB,CAACD,EAASV,KAAeU,EAAUiH,WAAW,IAAIb,SAAU9G,IAAa2H,WAAWb,SAAS5C,OAAQpI,KAAWA,IAASkE,KAAayI,SAAS,MAAK7H,MAAN,CAAa3B,SAAUyB,KAAYsG,GAAUtG,EAASV,IACtNpE,WAAY,IAAM6M,SAAS,MAAK7H,MAAN,CAAatB,WAAW,KAClDc,UAAWQ,MAGXyF,kBAAoBxC,IAAekE,EAAiBH,WAAYzB,WAAYtC,EAAU0C,WAAYG,gBAAiBuC,iBAAiBpF,IACpI2C,kBAAoB3C,IAAekE,EAAiBH,WAAYzB,WAAYC,WAAYvC,EAAU6C,gBAAiBsC,iBAAiBnF,IACpI8C,uBAAyB9C,IAAekE,EAAiBH,WAAYzB,WAAYC,WAAYG,WAAY1C,GAAWqF,qBAAqBrF,IACzIyC,UAAYF,WAAWhO,OAAS,GAAKgO,WAAWhO,OAAS,EAAK,cAAgBgO,WAAW3O,WACzFgP,UAAYF,WAAWnO,OAAS,GAAKmO,WAAWnO,OAAS,EAAK,cAAgBmO,WAAW9O,WACzFmP,cAAgBF,eAAetO,OAAS,GAAKsO,eAAetO,OAAS,EAAK,kBAAoBsO,eAAejP,WAC7GkO,eAzJhB,WACI,GAAyC,IAAtCoB,GAA2B3O,OAAa,CAEvC,IADA,IAAI+Q,EAAc,IAAIjR,IAAI,IAClBC,EAAI,EAAGA,EAAGyP,WAAWxP,OAAQD,IACjCgR,EAAYC,IAAIxB,WAAWzP,GAAGiL,UAElC,OAAQiG,MAAMC,KAAKH,GAIf,IADR,IAAIA,EAAc,IAAIjR,IAAI,IACVC,EAAI,EAAGA,EAAG4O,GAA2B3O,OAAQD,IACjDgR,EAAYC,IAAIrC,GAA2B5O,GAAGiL,UAElD,OAAQiG,MAAMC,KAAKH,GA4IGI,GAGlBnQ,YAAa,CAAC4G,EAAU/D,IAAa7C,EAAY4G,EAAU/D,GAG3DD,YAAa,CAAC0E,EAASV,KAAeU,EAAUiH,WAAW,IAAIb,SAAU9G,IAAa2H,WAAWb,SAAS5C,OAAQpI,KAAWA,IAASkE,KAAagH,GAAUtG,EAASV,IAGtK6G,aAAcA,aACdC,SAAUA,SAhCP,wCAkCkB,IAAlBrR,EAAMyB,QAET,kBAACiI,EAAD,CACIyC,SAAUkF,SACV1G,UAAWQ,MACXhF,WAAY,IAAM6M,SAAS,MAAK7H,MAAN,CAAatB,WAAW,KAClDqB,iBAAkB,CAACD,EAASV,KAAeU,EAAUiH,WAAW,IAAIb,SAAU9G,IAAa2H,WAAWb,SAAS5C,OAAQpI,KAAWA,IAASkE,KAAayI,SAAS,MAAK7H,MAAN,CAAa3B,SAAUyB,KAAYsG,GAAUtG,EAASV,IACtNhE,YAAa,CAAC0E,EAASV,KAAeU,EAAUiH,WAAW,IAAIb,SAAU9G,IAAa2H,WAAWb,SAAS5C,OAAQpI,KAAWA,IAASkE,KAAagH,GAAUtG,EAASV,IACtKH,KAAM+H,WACNhS,MAAO,CAAEC,KAAM,GACfuD,YAAa,CAAC4G,EAAU/D,IAAa7C,EAAY4G,EAAU/D,GAC3DsF,SAAU,IAAMiG,KATpB,wCAYqB,IAAlB/R,EAAMyB,QACN,kBAACoL,EAAD,CAAUI,WAAY,IAAMA,IAAcF,SAAUA,SAAU5M,MAAO,CAAEC,KAAM,GAA7E,wCAEA,kBAACkE,EAAD,CAAUnE,MAAO,CAAEC,KAAM,GAAK2T,SAAU1N,KAAM2N,OAAQ,IAAMhU,EAAMiU,WAAW,GAA7E,wC,sECvQJ,SAASC,GAAKlU,GAKzB,OACI,kBAACE,EAAA,EAAD,CAAMC,MAAO,CAAEC,KAAM,EAAGa,gBAAiB,WAAzC,sCACI,kBAACoR,GAAD,CAAelS,MAAO,CAAEsG,WAAY,MAAQwN,WAAaxS,GAAYzB,EAAMwB,SAASC,GAAUA,QAASzB,EAAMyB,QAA7G,uCAEA,kBAACV,EAAD,CAASS,SAAWC,GAAYzB,EAAMwB,SAASC,GAAUH,KAAMtB,EAAMsB,KAArE,wC,uFCXG,SAAS6S,KAKtB,OAFC7S,KAAM8S,SAAWtP,mBAAS,GAG3B,kBAACuP,EAAA,EAAD,CAAclU,MAAS,CAACC,KAAK,EAAGa,gBAAgB,WAAhD,sCACA,kBAACf,EAAA,EAAD,CAAMC,MAAO,CAACC,KAAK,GAAnB,sCAGM,kBAAC8T,GAAD,CAAM/T,MAAS,CAAGC,KAAK,GAAKoB,SAAaC,GAAU2S,QAAQ3S,GAAUA,QAAWH,KAAhF,yCAUOuO,IAAWC,OAAO,CAC/BT,UAAW,CACTjP,KAAM,EACNa,gBAAiB,UACjBX,WAAY,SACZD,eAAgB,a","file":"static/js/app.e905eb76.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Text, Image, View, TouchableHighlight, Alert } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nexport default function Tools(props) {\r\n     let col = \"\";\r\n     if (props.title === \"fav\") {\r\n          col = 'red'\r\n     } else if (props.title === \"settings\") {\r\n          col = 'blue'\r\n     } else {\r\n          col = 'yellow'\r\n     }\r\n\r\n     return (\r\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', }}>\r\n               <AntDesign name={props.name} color='#c45959' size={28} />\r\n          </View>\r\n     );\r\n\r\n}","import React, { Components } from 'react';\r\nimport { TouchableHighlight, StyleSheet, Text, View, Alert } from 'react-native';\r\n\r\nconsole.log(Test());\r\n\r\nfunction Test(props) {\r\n\r\n    cat = true;\r\n\r\n    return cat = !cat\r\n\r\n\r\n}\r\n\r\nexport default Test;","import React from 'react';\r\nimport Tools from './Tools'\r\nimport { Text, Alert, View, TouchableOpacity } from 'react-native';\r\nimport Test from './Test';\r\n\r\n\r\nexport default function ToolBar(props) {\r\n\r\n    const divBordStyle = { borderSyle: 'solid', borderWidth: '1px', flex: 1, }\r\n\r\n    return (\r\n        <View style={{ flex: 1, flexDirection: 'row', backgroundColor: '#fff', borderTopColor: '#c4c4c4', borderTopWidth: '1px', borderTopStyle: 'solid' }}>\r\n\r\n\r\n            <TouchableOpacity style={{ flex: 1, backgroundColor: (page === 1) ? '#e0e0e0' : '#fff' }} onPress={() => props.onChange(1)}>\r\n                <Tools pageNum={1} title=\"search\" name='search1' />\r\n            </ TouchableOpacity>\r\n\r\n            <TouchableOpacity style={{ flex: 1, backgroundColor: (page === 2) ? '#e0e0e0' : '#fff' }} onPress={() => props.onChange(2)}>\r\n                <Tools pageNum={2} title=\"fav\" name='heart' />\r\n            </ TouchableOpacity>\r\n\r\n            <TouchableOpacity style={{ flex: 1, backgroundColor: (page === 3) ? '#e0e0e0' : '#fff' }} onPress={() => props.onChange(3)}>\r\n                <Tools pageNum={3} title=\"settings\" name='setting' />\r\n            </ TouchableOpacity >\r\n        </View>\r\n\r\n    );\r\n\r\n}","import { AsyncStorage } from 'react-native';\r\n\r\n\r\n\r\n\r\nexport function getCorrectDate(){\r\n\r\n    \r\n    function getCorrectMonth(){\r\n        let month=   parseInt(new Date().getMonth());\r\n           month = month+1;\r\n           if(month<10)\r\n           \r\n           return '0'+month.toString();\r\n           else return month.toString();\r\n       }\r\n       function getCorrectDay(){\r\n           let day = parseInt(new Date().getDate());\r\n           if(day<10){\r\n               return '0' + day.toString();\r\n           }\r\n           else return day.toString();\r\n       }\r\n\r\n       return new Date().getFullYear()+getCorrectMonth()+getCorrectDay();\r\n            \r\n}\r\n\r\n\r\nexport function arrayToString(array) {\r\n\r\n    var string = ''\r\n    var uniqueArray = [...new Set(array)];\r\n    for (let x = 0; x < uniqueArray.length; x++) {\r\n        var hall = '';\r\n        switch (uniqueArray[x]) {\r\n            case 'Hampshire':\r\n                hall = 'Hamp';\r\n                break;\r\n            case 'Berkshire':\r\n                hall = 'Berk';\r\n                break;\r\n            case 'Franklin':\r\n                hall = 'Frank';\r\n                break;\r\n            default:\r\n                hall = 'Worcester';\r\n        }\r\n\r\n        if(!string.includes(hall)){\r\n        if (x < uniqueArray.length - 1)\r\n            \r\n            string = string.concat(hall + ', ');\r\n        else\r\n            string = string.concat(hall);\r\n        }\r\n    }\r\n    return string;\r\n\r\n}\r\n\r\nexport function arrayToStringMeal(array) {\r\n\r\n    var string = ''\r\n\r\n    for (let x = 0; x < array.length; x++) {\r\n        var hall = '';\r\n\r\n\r\n        if (x < array.length - 1)\r\n            string = string.concat(array[x] + ', ');\r\n        else\r\n            string = string.concat(array[x]);\r\n\r\n    }\r\n    return string;\r\n\r\n}\r\n\r\nexport async function isFavorite(food) {\r\n\r\n\r\n    const oldFaves = await AsyncStorage.getItem('favoritesArray');\r\n    let favsArray = JSON.parse(oldFaves);\r\n\r\n\r\n    for (let x = 0; x < favsArray.length; x++) {\r\n\r\n        if (favsArray[x] === food) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n\r\n\r\n\r\n}\r\n\r\n//I acknowledge this is a disgusting function but i dont care:\r\nexport function fixString(string){\r\nvar returnSt= string\r\n    if (string.includes('\\'')) {\r\n\r\n        var word = string.split(/[']/g);\r\n        var next = '';\r\n        if(word.length>1){\r\n        for(let x = 0; x< word.length-1; x++){\r\n            next = next.concat(word[x]).concat('\\\\\\'');\r\n        }\r\n        if(word[word.length-1].includes('\\’'))\r\n            next = next.concat(word[word.length-1].concat('\\\\\\''));\r\n        else\r\n            next = next.concat(word[word.length-1]);\r\n\r\n    }else{\r\n\r\n        next =  next.concat(word[0]).concat('\\\\\\'');\r\n\r\n    }\r\n        string = next;\r\n    \r\n    }\r\nif(string.includes('\\\"')){\r\n    \r\n        var word = string.split(/[\"]/g);\r\n    \r\n        var next = '';\r\n        if(word.length>1){\r\n        for(let x = 0; x< word.length-1; x++){\r\n            next = next.concat(word[x]).concat('\\\\\\\"');\r\n        }\r\n        if(word[word.length-1].includes('\\\"'))\r\n            next = next.concat(word[word.length-1].concat('\\\\\\\"'));\r\n        else\r\n            next = next.concat(word[word.length-1]);\r\n    }else{\r\n        next =  next.concat(word[0]).concat('\\\\\\\"');\r\n    }\r\n        \r\n    string = next;\r\n    \r\n\r\n    \r\n}\r\nif(string.includes('\\’')){\r\n    \r\n    var word = string.split(/[’]/g);\r\n    var next = '';\r\n    if(word.length>1){\r\n    for(let x = 0; x< word.length-1; x++){\r\n        next = next.concat(word[x]).concat('\\\\\\'');\r\n    }\r\n    \r\n        if(word[word.length-1].includes('\\’'))\r\n        next = next.concat(word[word.length-1].concat('\\\\\\''));\r\n        else\r\n        next = next.concat(word[word.length-1]);\r\n}else{\r\n   next =  next.concat(word[0]).concat('\\\\\\'');\r\n}\r\n    \r\nstring = next;\r\n\r\n\r\n\r\n}\r\nreturn string;\r\n\r\n}","import React from 'react';\r\nimport {View, TouchableOpacity, Image, AsyncStorage, Alert} from 'react-native';\r\nimport {ListItem} from 'react-native-elements';\r\nimport { Entypo } from '@expo/vector-icons';\r\n\r\n\r\n\r\n\r\n\r\nclass FavoritesListItems extends React.Component {\r\n\r\n\r\n  shouldComponentUpdate(nextProps){\r\n    return !(nextProps.where.length === this.props.where.length);\r\n  }\r\n\r\n    render() {\r\n      return (\r\n        <View style = {{flex: 1}}>\r\n        <TouchableOpacity onPress={()=>{this.props.onFoodPress(this.props.item, true)}}>\r\n        <ListItem \r\n            rightAvatar = {\r\n              <TouchableOpacity onPress = {()=>this.props.displayOptions(this.props.item)} style = {{width : '15%',  justifyContent: 'center', alignItems: 'center'}}>\r\n              <Entypo name = {'dots-three-horizontal'} size = {28} color = {'#c45959'}/>\r\n              </TouchableOpacity>\r\n            }\r\n            \r\n            titleProps = {{numberOfLines:1}}\r\n            title = {this.props.item} \r\n            subtitleStyle = {{color: 'grey'}}\r\n            containerStyle = {{backgroundColor: this.props.where.length ? '#ffffff': '#ededed' }}\r\n            subtitle = {this.props.where.length ? this.props.where : 'unavailable'} \r\n        /></TouchableOpacity>\r\n        </View>\r\n\r\n      );\r\n    }\r\n  \r\n  }\r\n  \r\n  export default FavoritesListItems;","import React, { useState, useEffect } from 'react';\r\nimport { Text, View, TouchableOpacity, ActivityIndicator, PixelRatio } from 'react-native';\r\nimport { Entypo, AntDesign } from '@expo/vector-icons';\r\nimport { isFavorite, fixString } from './helperFunctions';\r\n\r\nexport default function FoodPage(props) {\r\n\r\n    const ratio = PixelRatio.getFontScale();\r\n\r\n    const textStyle = {\r\n        fontSize:20*ratio,\r\n        color: '#000000',\r\n    }\r\n    \r\n\r\n    let [foodObj, changeFood] = useState([]);\r\n    let [loading , setLoading] = useState(true);\r\n\r\n    function getDietary(food){\r\n        let Diet = [];\r\n        \r\n        if(food.Vegetarian==='1') Diet.push('Vegetarian');\r\n        if(food.Loc==='1') Diet.push('Local');\r\n        if(food.Sustainable==='1') Diet.push('Sustainable');\r\n        if(food.WholeGrain==='1') Diet.push('WholeGrain');\r\n        if(food.Halal==='1') Diet.push('Halal');\r\n        if(food.AntibioticFree==='1') Diet.push('Antibiotic Free');\r\n        if(food.Vegan==='1') Diet.push('Vegan');\r\n\r\n        if(!Diet.length)\r\n        return 'None';\r\n        else{\r\n            let str = '';\r\n         for(let x =0; x<Diet.length-1; x++){\r\n          str= str.concat(Diet[x] + \", \");\r\n         }\r\n         str = str.concat(Diet[Diet.length-1]);\r\n         return str;   \r\n        }\r\n\r\n\r\n    }\r\n\r\n    function getAllergens(food){\r\n        let allergens = [];\r\n        \r\n        if(food.Milk==='1') allergens.push('Milk');\r\n        if(food.Corn==='1') allergens.push('Corn');\r\n        if(food.Eggs==='1') allergens.push('Eggs');\r\n        if(food.Gluten==='1') allergens.push('Gluten');\r\n        if(food.Soy==='1') allergens.push('Soy');\r\n        if(food.Sesame==='1') allergens.push('Sesame');\r\n        if(food.Treenuts==='1') allergens.push('Treenuts');\r\n        if(food.Fish==='1') allergens.push('Fish');\r\n        if(food.Shellfish==='1') allergens.push('Shellfish');\r\n        if(food.Peanuts==='1') allergens.push('Peanuts');\r\n\r\n        if(!allergens.length)\r\n        return 'None';\r\n        else{\r\n            let str = '';\r\n         for(let x =0; x<allergens.length-1; x++){\r\n          str= str.concat(allergens[x] + \", \");\r\n         }\r\n         str = str.concat(allergens[allergens.length-1]);\r\n         return str;   \r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const head = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n        }\r\n\r\n        var name = fixString(props.name);\r\n\r\n        //FIX THIS\r\n        \r\n\r\n            const query = \"SELECT * FROM nutritionInfo WHERE food = \\'\" + name + \"\\';\"\r\n\r\n            const data = { query: query }\r\n\r\n            const url = 'http://diningapphost.online/requestNutInfo.php'\r\n            const body = { method: 'POST', body: JSON.stringify(data), headers: head };\r\n            fetch(url, body).then(response => response.json()).then(responseJSON => { changeFood(responseJSON[0]); setLoading(false)})\r\n                .catch(error => { changeFood(null) });\r\n\r\n    }, []);\r\n\r\n\r\n    if (!loading) {\r\n\r\n        if(foodObj){\r\n\r\n        return (\r\n\r\n            <View style={{ flex: 12, marginTop: 40, backgroundColor: '#ffffff' }}>\r\n\r\n\r\n                <View style={{ backgroundColor: '#ffffff' }}>\r\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }} >\r\n\r\n                        <TouchableOpacity style={{ flex: 1, paddingLeft: '3%' }} onPress={() => props.closeModal()}>\r\n                            <Entypo name={'chevron-with-circle-down'} size={40*ratio} color={'#c45959'} />\r\n                        </TouchableOpacity>\r\n                        <View style={{ flex: 7, justifyContent: 'center', alignItems: 'center' }}>\r\n                            <Text style={{ color: 'black', fontSize: 27*ratio }}>{foodObj.food}</Text>\r\n                        </View>\r\n                        <TouchableOpacity style={{ flex: 1, paddingRight: '3%' }} onPress={() => props.onFavChange(!props.favorite, props.name)}>\r\n                            <AntDesign name={props.favorite ? 'heart' : 'hearto'} size={40*ratio} color={'#c45959'} />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n\r\n                </View>\r\n\r\n\r\n                <View style={{ paddingLeft: '8%', paddingRight:'8%', paddingTop:'5%', backgroundColor: '#ffffff' }} >\r\n \r\n                    <View style = {{borderColor:'#black', borderWidth:1}}>\r\n                    <View style = {{paddingLeft:'1%', paddingRight:'1%'}}>\r\n\r\n                    <Text style={textStyle}>Serving Size : {foodObj.ServingSize}</Text>\r\n                    <Text style={textStyle}>Calories : {foodObj.Calories}</Text>\r\n                    <Text style={textStyle}>Total Fat : {foodObj.TotalFat}</Text>\r\n                    <Text style={textStyle}>Trans Fat : {foodObj.TransFat}</Text>\r\n                    <Text style={textStyle}>Cholesterol : {foodObj.Cholesterol}</Text>\r\n                    <Text style={textStyle}>Sodium : {foodObj.Sodium}</Text>\r\n                    <Text style={textStyle}>Total Carbs : {foodObj.TotalCarb}</Text>\r\n                    <Text style={textStyle}>Dietary Fiber : {foodObj.Dietaryfiber}</Text>\r\n                    <Text style={textStyle}>Sugars : {foodObj.Sugars}</Text>\r\n                    <Text style={textStyle}>Protein : {foodObj.Protein}</Text>\r\n                    \r\n                    <Text style = {textStyle}/>\r\n                    \r\n                    <Text style ={textStyle} >Allergens: {getAllergens(foodObj)}</Text>\r\n                    <Text style = {textStyle}/>\r\n                    <Text style = {textStyle} >Dietary: {getDietary(foodObj)}</Text>\r\n                    </View>\r\n                    </View>\r\n                    <Text style = {textStyle}/>\r\n                    <Text style = {textStyle}/>\r\n\r\n                    <Text style = {textStyle}>This information comes from the Umass Dining Website but may not be up to date. Check with dining hall staff to confirm.</Text>\r\n                    <Text style = {textStyle}/>\r\n                \r\n                </View>\r\n\r\n            </View>\r\n        );\r\n    }\r\n    else {\r\n\r\n        //fix this\r\n        return (\r\n            <View style={{ flex: 12, marginTop: 40, backgroundColor: '#ffffff' }}>\r\n\r\n\r\n                <View style={{ backgroundColor: '#ffffff' }}>\r\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between' }} >\r\n\r\n                        <TouchableOpacity style={{ flex: 1, paddingLeft: '3%' }} onPress={() => props.closeModal()}>\r\n                            <Entypo name={'chevron-with-circle-down'} size={30*ratio} color={'#c45959'} />\r\n                        </TouchableOpacity>\r\n                        <View style={{ flex: 7, justifyContent: 'center', alignItems: 'center' }}>\r\n                            <Text style={{ color: 'black', fontSize: 27*ratio }}>Unavailable</Text>\r\n                        </View>\r\n                        <TouchableOpacity style={{ flex: 1, paddingRight: '3%' }} onPress={() => props.onFavChange(!props.favorite, props.name)}>\r\n\r\n                            <AntDesign name={props.favorite ? 'heart' : 'hearto'} size={30*ratio} color={'#c45959'} />\r\n\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n    else{\r\n         return(\r\n        <View style={{ flex: 12, marginTop: 40, backgroundColor: '#ffffff', alignItems:'center', justifyContent:'center' }}>\r\n                <ActivityIndicator size = 'large' color = '#c45959'/>\r\n            </View>\r\n        );   \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n        /*\r\n    \r\n    #diets\r\n    \r\n    Vegetarian BIT DEFAULT 0,\r\n    Loc BIT DEFAULT 0,\r\n    Sustainable BIT DEFAULT 0,\r\n    WholeGrain BIT DEFAULT 0,\r\n    Halal BIT DEFAULT 0,\r\n    AntibioticFree BIT DEFAULT 0,\r\n    Vegan BIT DEFAULT 0,\r\n    \r\n    # nutritional Info\r\n    \r\n    ServingSize VARCHAR(16),\r\n    \r\n    Calories DECIMAL(4,1),\r\n    CalsFat DECIMAL(4,1),\r\n    Totalfat DECIMAL(4,1),\r\n    Satfat DECIMAL(4,1),\r\n    Transfat DECIMAL(4,1),\r\n    Cholesterol DECIMAL(4,1),\r\n    Sodium DECIMAL(4,1),\r\n    Totalcarb DECIMAL(4,1),\r\n    Dietaryfiber DECIMAL(4,1),\r\n    Sugars DECIMAL(4,1),\r\n    protein DECIMAL(4,1)\r\n    \r\n\r\n        */\r\n       ","import React, { useState, useEffect } from 'react';\r\nimport { Text, View, TouchableHighlight, FlatList } from 'react-native';\r\nimport { ListItem } from 'react-native-elements';\r\nimport { Entypo, AntDesign } from '@expo/vector-icons';\r\n\r\nexport default function SearchFilterItems(props) {\r\n\r\n\r\n\r\n\r\n\r\n  renderSeparator = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          height: 1,\r\n          width: \"100%\",\r\n          backgroundColor: \"#dedede\",\r\n          //marginLeft: \"\"\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <View >\r\n      <View style={{ width: '100%', borderColor:'#000000', borderBottomWidth:1 }}>\r\n          <ListItem \r\n          contentContainerStyle ={{justifyContent:'center', alignItems:'center'}}\r\n          title={props.modalOptions.modalName}\r\n          titleStyle = {{color : '#000000'}}  \r\n          />\r\n      </View>\r\n      {renderSeparator()}\r\n <View style={{ width: '100%', }}>\r\n        <TouchableHighlight\r\n          underlayColor='grey'\r\n          actiiveOpacity={1}\r\n          onPress={() => {props.modalOptions.modalFav ? props.onFavChange() : props.onFavAdd()}}\r\n        >\r\n          <ListItem \r\n          contentContainerStyle ={{justifyContent:'center', alignItems:'center'}}\r\n          title={props.modalOptions.modalFav? 'Remove From Favorites' : 'Undo'}\r\n          titleStyle = {{color : '#c45959'}}  \r\n          />\r\n        </TouchableHighlight>\r\n      </View>\r\n     \r\n      {renderSeparator()}\r\n\r\n      <View style={{ width: '100%', }}>\r\n        <TouchableHighlight\r\n          underlayColor='grey'\r\n          actiiveOpacity={1}\r\n          onPress={() => {}}\r\n        >\r\n          <ListItem \r\n          contentContainerStyle ={{justifyContent:'center', alignItems:'center'}}\r\n          title={'Create Notification (Coming Soon)'}\r\n          titleStyle = {{ color: '#bababa'} }  \r\n          />\r\n        </TouchableHighlight>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n\r\n}","import React, { useState, } from 'react';\r\nimport { View, AsyncStorage, FlatList, TouchableOpacity, Alert, Text, PixelRatio } from 'react-native';\r\nimport { arrayToString } from './helperFunctions';\r\nimport FavoritesListItems from './FavoritesListItems';\r\nimport FoodPage from './FoodPage.js';\r\nimport Modal from 'react-native-modal';\r\nimport FavoritesOptionsList from './FavoritesOptionsList';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Favorites(props) {\r\n\r\n\r\n\r\n\r\n  [food, setFood] = useState('');\r\n  [modalOptions, setModalOptions] = useState({ modalName: '', modalFav: true, modalView: false });\r\n\r\n\r\n  renderSeparator = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          height: 1,\r\n          width: \"100%\",\r\n          backgroundColor: \"#dedede\",\r\n          //marginLeft: \"7%\"\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n\r\n  _renderItem = ({ item }) => {\r\n\r\n    var b = [];\r\n    var l = [];\r\n    var d = [];\r\n    var ln = [];\r\n    var gg = [];\r\n    var where = '';\r\n\r\n    for (var x = 0; x < props.menu.length; x++) {\r\n      if (item === props.menu[x].food) {\r\n        switch (props.menu[x].meal) {\r\n          case ('Breakfast'):\r\n            b.push(props.menu[x].hall);\r\n            break;\r\n\r\n          case ('Lunch'):\r\n            l.push(props.menu[x].hall);\r\n            break;\r\n\r\n          case ('Dinner'):\r\n            d.push(props.menu[x].hall);\r\n            break;\r\n\r\n          case ('Late Night'):\r\n            ln.push(props.menu[x].hall);\r\n            break;\r\n            \r\n          case ('Grab and Go'):\r\n            gg.push(props.menu[x].hall);\r\n            break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    where = where.concat(\r\n      b.length > 0 ? 'Breakfast: ' + arrayToString(b) + '\\n' : '').concat(\r\n        l.length > 0 ? 'Lunch: ' + arrayToString(l) + '\\n' : '').concat(\r\n          d.length > 0 ? 'Dinner: ' + arrayToString(d) + '\\n' : '').concat(\r\n            ln.length > 0 ? 'Late Night: ' + arrayToString(ln) + '\\n' : '').concat(\r\n            gg.length > 0 ? 'Grab and Go: ' + arrayToString(gg) + '\\n' : '');\r\n    where = where.substring(0, where.length - 1);\r\n\r\n\r\n\r\n\r\n    return (<FavoritesListItems displayOptions={(item) => setModalOptions({ modalFav: true, modalName: item, modalView: true })} onFoodPress={(foodName, bool) => { props.onFoodPress(foodName, bool); }} where={where} item={item} />\r\n\r\n    )\r\n  };\r\n  return (\r\n    <View style={{ flex: 12, justifyContent: 'center', alignItem: 'center' }}>\r\n\r\n\r\n      <Modal\r\n        isVisible={props.modalInfo.modalView}\r\n        onSwipeComplete={() => props.closeModal()}\r\n        swipeDirection=\"down\"\r\n        backdropColor={'#ffffff'}\r\n        backdropOpacity={1}\r\n        style={{ flex: 1, margin: 0, justifyContent: 'flex-end', }}\r\n      >\r\n        <FoodPage\r\n          name={props.modalInfo.modalName}\r\n          closeModal={() => props.closeModal()}\r\n          favorite={props.modalInfo.modalFav}\r\n          onFavChange={(boolean, foodName) => { props.onFavChangeModal(boolean, foodName) }} />\r\n      </Modal>\r\n\r\n      <Modal\r\n        isVisible={modalOptions.modalView}\r\n        onSwipeComplete={() => setModalOptions({ ...modal, modalView: false })}\r\n        onBackdropPress={() => setModalOptions({ ...modal, modalView: false })}\r\n        swipeDirection=\"down\"\r\n        style={{ justifyContent: 'flex-end', margin: 0, }}\r\n\r\n\r\n\r\n\r\n      >\r\n\r\n        <FavoritesOptionsList\r\n          onFavChange={() => { props.onFavChange(!modalOptions.modalFav, modalOptions.modalName); setModalOptions({ ...modalOptions, modalFav: false }) }}\r\n          onFavAdd={() => { props.onFavChange(!modalOptions.modalFav, modalOptions.modalName); setModalOptions({ ...modalOptions, modalFav: true }) }}\r\n          modalOptions={modalOptions} Button={[{ name: 'Remove From Favorites', function: 1 }, { name: 'View Nutrition Info', function: 2 }, { name: 'Create Notification (Coming Soon)', function: 3 }]} />\r\n\r\n\r\n      </Modal>\r\n\r\n\r\n      <View style={{ backgroundColor: '#f0f0f0', justifyContent:'center', alignItems:'center' }}>\r\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }} >\r\n\r\n          <TouchableOpacity style={{ flex: 1, paddingLeft: '3%' }} onPress={() => { }}>\r\n          </TouchableOpacity>\r\n          <View style={{ flex: 7, justifyContent: 'center', alignItems: 'center', alignContent: 'center' }}>\r\n            <Text style={{ color: 'black', fontFamily: 'Copperplate', fontSize: 40*PixelRatio.getFontScale() }}>{'Favorites'}</Text>\r\n          </View>\r\n          <TouchableOpacity style={{ flex: 1, paddingRight: '3%', }}\r\n            onPress={() => Alert.alert(\r\n              'Remove All Favorites?', '',\r\n              [{ text: 'Yes', onPress: async function () { await AsyncStorage.removeItem('favoritesArray'); props.favClear() }, style: 'cancel' },\r\n              { text: 'Cancel' }])}>\r\n            <FontAwesome name={'trash'} size={40 * PixelRatio.getFontScale()} color={'#c45959'} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <View style={{ backgroundColor: '#dedede', width: '100%', height: 1 }}></View>\r\n      <View style={{ flex:10 }}>\r\n        <FlatList\r\n\r\n          removeClippedSubviews={true}\r\n\r\n          ItemSeparatorComponent={renderSeparator}\r\n          data={props.favArray}\r\n          renderItem={_renderItem}\r\n          keyExtractor={(item, index) => item}\r\n\r\n        />\r\n      </View>\r\n    </View>\r\n\r\n\r\n  );\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Text, View, TextInput, Button, ActivityIndicator, PixelRatio } from 'react-native';\r\nimport { getCorrectDate } from './helperFunctions';\r\n\r\nconst fs = PixelRatio.getFontScale();\r\n\r\nconst styleText = {\r\n  fontSize: fs * 20,\r\n}\r\nconst headerText = {\r\n  fontSize: fs * 30\r\n}\r\n\r\nfunction fixDates(date) {\r\n  let dateStr = date.toString();\r\n\r\n  let array = dateStr.split('');\r\n  let newString = [array[4], array[5], '/', array[6], array[7], '/', array[0], array[1], array[2], array[3]]\r\n  let returnstr = newString.join(\"\");\r\n  return returnstr;\r\n}\r\n\r\nexport default function Settings(props) {\r\n\r\n\r\n  [loadingMenu, setLoading] = useState(false, false);\r\n\r\n\r\n  return (\r\n    <View style={{ flex: 12 }}>\r\n      <View style={{ paddingTop: '5%', flex: 1, justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\r\n        <Text style={styleText}>Menu Date: {fixDates(props.menuDate)}</Text>\r\n        <Text style={styleText}>Todays Date: {fixDates(getCorrectDate())}</Text>\r\n        <Button color='#c45959' title={'Update Menu'} onPress={() => { setLoading([true, false]); setTimeout(() => { props.updateMenu(); setLoading([false, true]) }, 5000) }}\r\n        />\r\n        <View style={{ flex: 1 }}>\r\n\r\n          {\r\n            loadingMenu[0] ?\r\n              <ActivityIndicator size='large' color='#c45959' />\r\n              :\r\n              loadingMenu[1] ?\r\n                <Text style={styleText}>Menu updated.</Text>\r\n                :\r\n                <View style={{ flex: 1 }} />\r\n          }\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 3, paddingLeft: '5%', paddingRight: '5%' }}>\r\n        <View style={{ alignContent: 'center', justifyContent: 'center', alignItems: 'center' }}>\r\n\r\n          <Text style={headerText}>Planned Features: </Text>\r\n        </View>\r\n        <Text style={styleText}></Text>\r\n        <Text style={styleText}>- Notifications</Text>\r\n        <Text style={styleText}>- Hours of operation</Text>\r\n        <Text style={styleText}>- Menus for upcoming days</Text>\r\n        <Text style={styleText}>- Filters based on allergen/nutrition info</Text>\r\n        <Text style={styleText}></Text>\r\n        <View style={{ alignContent: 'center', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Text style={headerText}>Suggestions? Questions? Contact me:</Text>\r\n          <TextInput editable={false} multiline={true} style={{ fontSize: 30 * fs, color: 'red' }}>patcleary11@gmail.com</TextInput>\r\n        </View>\r\n        <Text style={styleText}></Text>\r\n\r\n        <Text style={styleText}></Text>\r\n      </View>\r\n\r\n        <View style={{flex:.5}}>\r\n        <TextInput style={styleText} editable={false} multiline={true}>App Icon by freepik: \"https://www.flaticon.com/authors/freepik\" </TextInput>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n\r\n}","import React from 'react';\r\nimport { View, TouchableOpacity, Text, PixelRatio } from 'react-native';\r\nimport { ListItem } from 'react-native-elements';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nconst ratio = PixelRatio.getFontScale();\r\nconst fs = ratio*30;\r\n\r\n\r\n\r\n/*\r\nTODOS:\r\nbetter hall/meal selection\r\noverlays\r\nMeal preference filters.\r\nOnly one entry of each food in favorites. (edge cases).\r\nReg Expression edge cases on search like parantheses.\r\nPull to refresh todays menu.\r\nfilters on favorites.\r\n\r\n\r\nDONE:\r\nsearch/ filter in favorites\r\n\r\n*/\r\nclass FoodListItem extends React.Component {\r\n\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return !(nextProps.favorite === this.props.favorite)\r\n\r\n  }\r\n\r\n  foodPress=()=>{\r\n    this.props.onFoodPress(this.props.item.food, this.props.favorite)\r\n  }\r\n\r\n  favPress =()=>{\r\n    this.props.setFav(!this.props.favorite);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View \r\n      style={{ flex: 1 }}>\r\n\r\n        {this.props.categoryChange?\r\n          <View style = {{justifyContent:'center', alignItems:'center', backgroundColor:'#6b6b6b'}}>\r\n          <Text style = {{flex:1, fontSize:fs, fontFamily:'Copperplate', color:'white'}}>{this.props.currentCategory}</Text>\r\n          </View>\r\n        :\r\n            null\r\n        }\r\n        <TouchableOpacity onPress={this.foodPress}>\r\n          <ListItem\r\n            rightAvatar={\r\n              <TouchableOpacity\r\n                onPress={this.favPress}\r\n                style={{ width: '15%', justifyContent: 'center', alignItems: 'center' }}>\r\n                <AntDesign name={this.props.favorite ? 'heart' : 'hearto'} size={25} color={'#c45959'} />\r\n              </TouchableOpacity>\r\n            }\r\n            titleProps={{ numberOfLines: 1 }}\r\n            titleStyle={{ color: 'black' }}\r\n            title={this.props.item.food}\r\n            subtitle={this.props.item.hall + \" - \" + this.props.item.meal + \" - \" + this.props.item.category}\r\n            subtitleStyle={{ color: 'grey' }}\r\n          /></TouchableOpacity>\r\n      </View>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default FoodListItem;","import React, { Component } from 'react';\r\nimport { Text, View, FlatList, ActivityIndicator, PixelRatio } from 'react-native';\r\nimport FoodListItem from './FoodListItem';\r\n\r\nconst ratio = PixelRatio.getFontScale();\r\nconst fs = ratio*30;\r\nlet currentCategory = 'none';\r\n\r\n\r\nexport default class FoodList extends React.PureComponent {\r\n\r\n  componentDidMount= ()=>{\r\n    currentCategory = 'none';\r\n  }\r\n  //seperates items in list\r\n  renderSeparator = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          height: 1,\r\n          width: \"100%\",\r\n          backgroundColor: \"#dedede\",\r\n          //marginLeft: \"\"\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  renderHeader = ()=>{\r\n    if(loading){\r\n      return <ActivityIndicator  size = 'large' color = '#c45959'/>\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  _renderItem = ({ item }) => {\r\n\r\n\r\n    let categoryChange=false;\r\n\r\n    //check if the menu item is a favorite before rendering\r\n    item.favorite = false;\r\n\r\n    for (let x = 0; x < this.props.favArray.length; x++) {\r\n\r\n      if (this.props.favArray[x] === item.food) {\r\n        item.favorite = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //render item\r\n    if(!(currentCategory === item.category )){\r\n      currentCategory = item.category;\r\n      categoryChange=true;\r\n    }\r\n    return (\r\n      \r\n      <FoodListItem categoryChange = {categoryChange} currentCategory = {currentCategory} onFoodPress={(foodName, favorite) => this.props.onFoodPress(foodName, favorite)} setFav={(boolean) => this.props.onFavChange(boolean, item.food)} item={item} favorite={item.favorite} />\r\n\r\n    )\r\n   \r\n  };\r\n\r\n\r\n  //render FlatList\r\n  render() {\r\n      return (\r\n        <View style={{ flex: 1 }}>\r\n              <FlatList\r\n                //ListHeaderComponent ={this.renderHeader}\r\n                removeClippedSubviews={true}\r\n                ItemSeparatorComponent={this.renderSeparator}\r\n                data={this.props.jsonFood}\r\n                renderItem={this._renderItem}\r\n                keyExtractor={(item, index) => item.food + item.hall + item.category + item.meal } \r\n                extraData={this.props.favArray}\r\n                windowSize = {15}\r\n                ListEmptyComponent = { <View style={{ alignItems: 'center', paddingTop: '1%' }}><Text >No results.</Text></View>}\r\n              />\r\n\r\n        </View>\r\n\r\n      );\r\n  }\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { InteractionManager, View, TouchableHighlight, FlatList, PixelRatio } from 'react-native';\r\nimport { ListItem } from 'react-native-elements';\r\nimport { Entypo, AntDesign } from '@expo/vector-icons';\r\n\r\nexport default function SearchFilterItems(props) {\r\n\r\n  const ratio = PixelRatio.getFontScale();\r\n  [selected, changeSelected] = useState(props.selected);\r\n\r\n\r\n\r\n\r\n  renderSeparator = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          height: 1,\r\n          width: \"100%\",\r\n          backgroundColor: \"#dedede\",\r\n          //marginLeft: \"\"\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  pushReturn = (array, name) => {\r\n    //gotta make new array to cause state changge\r\n    array.push(name);\r\n    newArray = array;\r\n    return newArray;\r\n  }\r\n\r\n  renderItem = ({ item }) => {\r\n    return (\r\n      <View style={{ width: '100%', }}>\r\n        <TouchableHighlight\r\n          underlayColor='grey'\r\n          actiiveOpacity={1}\r\n          onPress={() => { if (selected.includes(item)) { selectedOptions = selected.filter(name => !(name === item)); changeSelected(selectedOptions); props.passSelected(selectedOptions) } else { selectedOptions = selected.concat([item]); changeSelected(selected.concat([item])); props.passSelected(selectedOptions); } }}\r\n        >\r\n          <ListItem title={item}\r\n\r\n            rightAvatar={\r\n\r\n              selected.includes(item) ?\r\n\r\n                <AntDesign name={'checkcircle'} size={17 * ratio} color={'#c45959'} />\r\n                :\r\n                null\r\n            }\r\n          />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <View >\r\n      <View style={{ width: '100%', }}>\r\n        <TouchableHighlight\r\n          underlayColor='grey'\r\n          actiiveOpacity={1}\r\n          onPress={() => { changeSelected(props.options); props.passSelected(props.options) }}\r\n        >\r\n          <ListItem title={'All'}\r\n\r\n          />\r\n        </TouchableHighlight>\r\n\r\n        {renderSeparator()}\r\n      </View>\r\n\r\n\r\n      <FlatList\r\n        ItemSeparatorComponent={this.renderSeparator}\r\n        data={props.options}\r\n        renderItem={this.renderItem}\r\n        keyExtractor={(item, index) => item}\r\n      />\r\n    </View>\r\n  );\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {  View, TouchableHighlight, FlatList, PixelRatio } from 'react-native';\r\nimport { ListItem } from 'react-native-elements';\r\nimport {  AntDesign } from '@expo/vector-icons';\r\n\r\nexport default function SearchFilterItemsCategory(props) {\r\n\r\n  const ratio = PixelRatio.getFontScale();\r\n  [selected, changeSelected] = useState(props.selected);\r\n\r\n\r\n\r\n\r\n  renderSeparator = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          height: 1,\r\n          width: \"100%\",\r\n          backgroundColor: \"#dedede\",\r\n          //marginLeft: \"\"\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  pushReturn = (array, name) => {\r\n    //gotta make new array to cause state changge\r\n    array.push(name);\r\n    newArray = array;\r\n    return newArray;\r\n  }\r\n\r\n  renderItem = ({ item }) => {\r\n    return (\r\n      <View style={{flex:.3333333}}>\r\n        <TouchableHighlight\r\n          underlayColor='grey'\r\n          actiiveOpacity={1}\r\n          onPress={() => { if (selected.includes(item)) { selectedOptions = selected.filter(name => !(name === item)); changeSelected(selectedOptions); props.passSelected(selectedOptions) } else { selectedOptions = selected.concat([item]); changeSelected(selected.concat([item])); props.passSelected(selectedOptions); } }}\r\n        >\r\n          <ListItem title={item}\r\n            titleProps={{ numberOfLines:1 }}\r\n\r\n            rightAvatar={\r\n\r\n              selected.includes(item) ?\r\n\r\n                <AntDesign name={'checkcircle'} size={17 * ratio} color={'#c45959'} />\r\n\r\n                :\r\n                null\r\n            }\r\n          />\r\n        </TouchableHighlight>\r\n      </View>\r\n\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <View style >\r\n      <View style={{width:'100%'}}>\r\n        <TouchableHighlight\r\n          underlayColor='grey'\r\n          actiiveOpacity={1}\r\n          onPress={() => { changeSelected(props.options); props.passSelected(props.options) }}\r\n        >\r\n          <ListItem titleStyle = {{alignContent:'center', justifyContent:'center'}} \r\n          title={'All'}\r\n\r\n          />\r\n        </TouchableHighlight>\r\n\r\n        {renderSeparator()}\r\n      </View>\r\n\r\n        <View style = {{backgroundColor:'#ffffff'}}>\r\n      <FlatList\r\n        ItemSeparatorComponent={this.renderSeparator}\r\n        data={props.options}\r\n        renderItem={this.renderItem}\r\n        keyExtractor={(item, index) => item}\r\n        numColumns={3}\r\n      />\r\n      </View >\r\n    </View>\r\n  );\r\n\r\n\r\n}","import React from 'react';\r\nimport { View,  Text, StyleSheet, PixelRatio, TouchableOpacity } from 'react-native';\r\nimport Modal from 'react-native-modal';\r\nimport SearchFilterItems from './SearchFilterItems';\r\nimport SearchFilterItemsCategory from './SearchFilterItemsCategory';\r\n\r\n\r\n\r\nexport default class SearchFilters extends React.Component {\r\n\r\n  state = {\r\n  \r\n    visibleModalId: null,\r\n    selected: this.props.selected,\r\n  \r\n  };\r\n\r\n  \r\n  \r\n  onClose = () => {\r\n    \r\n    \r\n    this.setState({ visibleModal: null })\r\n  }\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n    \r\n  \r\n\r\n        <TouchableOpacity\r\n          style={{ width: '100%', height: 50, borderColor: '#ffffff', borderWidth: 1, borderLeftWidth: .5, borderRightWidth: .5, borderTopWidth: 0, justifyContent: 'center', alignItems: 'center' }}\r\n          onPress={() => this.setState({ visibleModal: 'bottom' })}\r\n        >\r\n          <Text style={{ fontSize: 24*PixelRatio.getFontScale(), color: '#ffffff' }}>{this.props.label}</Text>\r\n        </TouchableOpacity>\r\n        <Modal\r\n          onBackdropPress={this.onClose}\r\n          isVisible={this.state.visibleModal === 'bottom'}\r\n          onSwipeComplete={this.onClose}\r\n          swipeDirection={['down']}\r\n          style={styles.bottomModal}\r\n          onShow = {()=>this.setState({selected: []})}\r\n\r\n        >\r\n         {\r\n           (this.props.check==='cat')?\r\n                <SearchFilterItemsCategory options={this.props.options} selected={this.state.selected} passSelected={(selectionArray) =>{this.props.passSelected(selectionArray)}}/>\r\n                  :\r\n              <SearchFilterItems options={this.props.options} selected={this.state.selected} passSelected={(selectionArray) =>{this.props.passSelected(selectionArray)}}/>\r\n         }\r\n        </Modal>\r\n\r\n      </View>\r\n\r\n\r\n    );\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#c45959',\r\n\r\n  },\r\n  content: {\r\n  },\r\n  bottomModal: {\r\n    //alignItems:'center',\r\n    //flexDirection:'column',\r\n    justifyContent: 'flex-end',\r\n    margin: 0,\r\n  }\r\n})","import React, { useState, useEffect } from 'react';\r\nimport { View, AsyncStorage, ActivityIndicator, Button } from 'react-native';\r\nimport { SearchBar } from 'react-native-elements'\r\nimport FoodList from './FoodList';\r\nimport Modal from 'react-native-modal';\r\nimport FoodPage from './FoodPage';\r\nimport SearchFilters from './SearchFilters';\r\n\r\n\r\n\r\n/*Flat list:\r\n    key extractor must be unique and dont use index because it will rerender when scrolling\r\n    You goootttta use a shouldComponentUpdate because otherwise the stupid thing will rerender every item from the top every single goddamn time.\r\n    maybe stop using ()=>??? idk bruh\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n//search page function\r\nexport default function Search(props) {\r\n\r\n\r\n\r\n    let mealArray = ['Breakfast', 'Lunch', 'Dinner', 'Late Night', 'Grab And Go'];\r\n    let hallArray = ['Berkshire', 'Hampshire', 'Franklin', 'Worcester'];\r\n    let categoryArray = props.categoriesProp;\r\n    //querySQL \r\n    //render Search page\r\n    return (\r\n        <View style={{ flex: 12 }}>\r\n            <Modal\r\n\r\n                isVisible={props.modalInfo.modalView}\r\n\r\n                onSwipeComplete={() => props.closeModal()}\r\n                swipeDirection=\"down\"\r\n                backdropColor={'#ffffff'}\r\n                backdropOpacity={1}\r\n                style={{ flex: 1, margin: 0 }}\r\n            >\r\n                <FoodPage\r\n                    onFavChange={(boolean, foodName) => { props.onFavChangeModal(boolean, foodName) }}\r\n                    name={props.modalInfo.modalName}\r\n                    closeModal={() => props.closeModal()}\r\n                    favorite={props.modalInfo.modalFav}\r\n                />\r\n            </Modal>\r\n\r\n            <SearchBar autoCorrect= {false} round={true} platform='default' lightTheme={true} placeholder=\"Search Today's Menu\" onChangeText={(text) => { props.onChangeText(text) }} value={props.searchTerm} ></SearchBar>\r\n            <View style={{ flexDirection: 'row' }}>\r\n                <SearchFilters selected={hallFilter} options={hallArray} passSelected={(selected) => props.passSelectedHalls(selected)} label={props.hallLabel} />\r\n                <SearchFilters selected={mealFilter} options={mealArray} passSelected={(selected) => props.passSelectedMeals(selected)} label={props.mealLabel} />\r\n                <SearchFilters selected={categoryFilter} options={categoryArray} check ={'cat'} passSelected={(selected) => props.passSelectedCategories(selected)} label={props.categoryLabel} />\r\n            </View>\r\n\r\n\r\n            <FoodList\r\n                onFoodPress={(foodName, favorite) => props.onFoodPress(foodName, favorite)}\r\n                jsonFood={props.searchObject}\r\n                favArray={props.jsonFavs}\r\n                onFavChange={(boolean, foodName) => { props.onFavChange(boolean, foodName) }}\r\n            />\r\n\r\n\r\n        </View>\r\n\r\n    );\r\n\r\n}\r\n","import React, { useState, useEffect, } from 'react';\r\nimport { AsyncStorage } from 'react-native';\r\nimport Favorites from './Favorites';\r\nimport Settings from './Settings';\r\nimport Search from './Search';\r\nimport FoodPage from './FoodPage';\r\nimport { getCorrectDate, fixString } from './helperFunctions';\r\n\r\n\r\n\r\nvar objectMinusCategoryFilters = [];\r\nvar categories = []\r\n\r\n//getMenu useEffecty\r\nasync function favChange(boolean, foodName) {\r\n    const oldFaves = await AsyncStorage.getItem('favoritesArray');\r\n    let favsArray = JSON.parse(oldFaves);\r\n\r\n    if (boolean) {\r\n        if (!favsArray) {\r\n            favsArray = [];\r\n        }/*\r\n            for (let x = 0; x < favsArray.length; x++) {\r\n                if (favsArray[x] > foodName) {\r\n                    favsArray.splice(x, 0, foodName);\r\n                    break;\r\n                }\r\n                if(x=== favsArray.length-1)\r\n                favsArray.push(foodName);\r\n            }*/\r\n            favsArray.push(foodName);\r\n            favsArray.sort();\r\n        \r\n        favsStr = JSON.stringify(favsArray);\r\n\r\n\r\n        await AsyncStorage.setItem('favoritesArray', favsStr);\r\n    }\r\n    else {\r\n\r\n        favsArray = favsArray.filter((value) => !(value === foodName));\r\n        favsStr = JSON.stringify(favsArray);\r\n        await AsyncStorage.setItem('favoritesArray', favsStr);\r\n    }\r\n    getFavs();\r\n}\r\n\r\n\r\n//load menu from async storage\r\nasync function getAsyncMenu() {\r\n\r\n    try {\r\n        await AsyncStorage.getItem('todaysMenu').then(object => JSON.parse(object)).then(object => { updateSearchObject(object) });\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n//load favorite foods from async storage\r\nasync function getFavs() {\r\n    try {\r\n        let newFavs = await AsyncStorage.getItem('favoritesArray').then(object => object ? changeFavs(JSON.parse(object)) : changeFavs([]));\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\n\r\n//save fetch results into async and update todays's menu\r\nasync function saveData(todaysMenu) {\r\n    updateSearchObject(todaysMenu);\r\n    try {\r\n        let JSONString = JSON.stringify(todaysMenu);\r\n        await AsyncStorage.setItem('todaysMenu', JSONString);\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default function CenterPiece(props) {\r\n\r\n\r\nfunction getCategories(){\r\n    if(objectMinusCategoryFilters.length === 0){\r\n        let categorySet = new Set([]);\r\n        for(let x = 0; x< todaysMenu.length; x++){\r\n            categorySet.add(todaysMenu[x].category);\r\n        }\r\n        return  Array.from(categorySet);\r\n    }\r\n\r\n    let categorySet = new Set([]);\r\n            for(let x = 0; x< objectMinusCategoryFilters.length; x++){\r\n                categorySet.add(objectMinusCategoryFilters[x].category);\r\n            }\r\n            return  Array.from(categorySet);\r\n}\r\n\r\n\r\n    function updateSearch(jsonFood, searchTerm, hallFilter, mealFilter, categoryFilter) {\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            updateSearchTerm(searchTerm);\r\n\r\n            var regex = new RegExp(`\\\\b${fixString(searchTerm)}.*`, 'gi');\r\n\r\n            const foods = jsonFood.filter((foodObj) => foodObj.food.match(regex));\r\n\r\n            const halls = foods.filter((foodObj) => (hallFilter.length ? hallFilter.includes(foodObj.hall) : true));\r\n\r\n            const meals = halls.filter((foodObj) => (mealFilter.length ? mealFilter.includes(foodObj.meal) : true));\r\n            \r\n            objectMinusCategoryFilters = meals;\r\n            \r\n            const category = meals.filter((foodObj) => (categoryFilter.length ? categoryFilter.includes(foodObj.category) : true));\r\n            \r\n\r\n            \r\n\r\n            updateSearchObject(category);\r\n\r\n\r\n\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    async function updateSearchWait(jsonFood, searchTerm, hallFilter, mealFilter, categoryFilter) {\r\n        setLoading(true);\r\n        await updateSearch(jsonFood, searchTerm, hallFilter, mealFilter, categoryFilter);\r\n        setLoading(false);\r\n    }\r\n\r\n    function onFoodPress(foodName, favorite) {\r\n\r\n        setModal({ modalName: foodName, modalView: true, modalFav: favorite });\r\n\r\n    }\r\n\r\n\r\n\r\n    //PHP SQL query\r\n    async function updateMenu() {\r\n        let date = getCorrectDate();\r\n\r\n        const query = \"SELECT * FROM todaysMenu\" + date + ' ORDER BY category, food;';\r\n        const data = { query: query }\r\n\r\n        const url = 'http://diningapphost.online/requestData.php'\r\n        const body = { method: 'POST', body: JSON.stringify(data) };\r\n        try {\r\n            let response = await fetch(url, body)\r\n            let responseJSON = await response.json()\r\n            saveData(responseJSON);\r\n            updateTodaysMenu(responseJSON);\r\n            setMenuDate(date);\r\n            setLoading(false);\r\n        }\r\n        catch (error) { console.error(error) };\r\n    }\r\n\r\n    function getMenu() {\r\n        todaysDate = getCorrectDate();\r\n\r\n        if (menuDate != todaysDate) {\r\n            updateMenu();\r\n            getFavs();\r\n        } else {\r\n            getAsyncMenu();\r\n            getFavs();\r\n        }\r\n    }\r\n\r\n    //todays menu\r\n    [todaysMenu, updateTodaysMenu] = useState([]);\r\n\r\n    //menu date used to determine if update necessary.\r\n    [menuDate, setMenuDate] = useState(0);\r\n\r\n    //favs array\r\n    [jsonFavs, changeFavs] = useState([]);\r\n\r\n    //current search array\r\n    [searchObject, updateSearchObject] = useState([]);\r\n\r\n    //current search term and filters\r\n    [searchTerm, updateSearchTerm] = useState('');\r\n    [mealFilter, changeMealFilter] = useState([]);\r\n    [hallFilter, changeHallFilter] = useState([]);\r\n    [categoryFilter, changeCategoryFilter] = useState([]);\r\n    \r\n    //try not to use state for this...\r\n\r\n    [loading, setLoading] = useState(true);\r\n\r\n\r\n    //Modal State\r\n    [modal, setModal] = useState({ modalView: false, modalName: '', modalFav: false });\r\n\r\n    useEffect(() => getMenu(), []);\r\n\r\n\r\n    if (props.pageNum == 0) {\r\n        return <Test />\r\n    } else\r\n     \r\n     \r\n        if (props.pageNum === 1) {\r\n            //return <AsyncTest style = {{flex:9}}/>\r\n\r\n            return <Search\r\n\r\n                loading = {loading}\r\n                \r\n                style={{ flex: 9 }}\r\n\r\n                //search term and when it is updated\r\n                onChangeText={(text) => {updateSearchWait(todaysMenu, text, hallFilter, mealFilter, categoryFilter); }}\r\n                searchTerm={searchTerm}\r\n\r\n                //modal info and functions:\r\n                onFavChangeModal={(boolean, foodName) => { boolean ? changeFavs([...jsonFavs, foodName]) : changeFavs(jsonFavs.filter((food) => !(food === foodName))); setModal({ ...modal, modalFav: boolean }); favChange(boolean, foodName) }}\r\n                closeModal={() => setModal({ ...modal, modalView: false })}\r\n                modalInfo={modal}\r\n\r\n                //filters for meals, halls and their labels.\r\n                passSelectedHalls={(selected) => { updateSearchWait(todaysMenu, searchTerm, selected, mealFilter, categoryFilter); changeHallFilter(selected); }}\r\n                passSelectedMeals={(selected) => { updateSearchWait(todaysMenu, searchTerm, hallFilter, selected, categoryFilter); changeMealFilter(selected); }}\r\n                passSelectedCategories={(selected) => { updateSearchWait(todaysMenu, searchTerm, hallFilter, mealFilter, selected); changeCategoryFilter(selected); }}\r\n                hallLabel={(hallFilter.length < 1 || hallFilter.length > 3) ? 'Select Hall' : hallFilter.toString()}\r\n                mealLabel={(mealFilter.length < 1 || mealFilter.length > 4) ? 'Select Meal' : mealFilter.toString()}\r\n                categoryLabel={(categoryFilter.length < 1 || categoryFilter.length > 4) ? 'Select Category' : categoryFilter.toString()}\r\n                categoriesProp = {getCategories()}\r\n\r\n                //function to open nutrition facts.\r\n                onFoodPress={(foodName, favorite) => onFoodPress(foodName, favorite)}\r\n\r\n                //updates favorites on food list.\r\n                onFavChange={(boolean, foodName) => { boolean ? changeFavs([...jsonFavs, foodName]) : changeFavs(jsonFavs.filter((food) => !(food === foodName))); favChange(boolean, foodName) }}\r\n\r\n                //JSON of search results and favorites.\r\n                searchObject={searchObject}\r\n                jsonFavs={jsonFavs}\r\n            />\r\n        } else if (props.pageNum === 2) {\r\n            return (\r\n                <Favorites\r\n                    favArray={jsonFavs}\r\n                    modalInfo={modal}\r\n                    closeModal={() => setModal({ ...modal, modalView: false })}\r\n                    onFavChangeModal={(boolean, foodName) => { boolean ? changeFavs([...jsonFavs, foodName]) : changeFavs(jsonFavs.filter((food) => !(food === foodName))); setModal({ ...modal, modalFav: boolean }); favChange(boolean, foodName); }}\r\n                    onFavChange={(boolean, foodName) => { boolean ? changeFavs([...jsonFavs, foodName]) : changeFavs(jsonFavs.filter((food) => !(food === foodName))); favChange(boolean, foodName) }}\r\n                    menu={todaysMenu}\r\n                    style={{ flex: 9 }}\r\n                    onFoodPress={(foodName, favorite) => onFoodPress(foodName, favorite)}\r\n                    favClear={() => getFavs()}\r\n\r\n                />)\r\n        } else if (props.pageNum === 3) {\r\n            return <Settings updateMenu={() => updateMenu()} menuDate={menuDate} style={{ flex: 9 }} />\r\n        } else {\r\n            return <FoodPage style={{ flex: 9 }} foodItem={food} onBack={() => props.changePage(1)} />\r\n        }\r\n\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Text, View, } from 'react-native';\r\nimport ToolBar from './ToolBar';\r\nimport CenterPiece from './CenterPiece';\r\n\r\n\r\nexport default function Main(props) {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1, backgroundColor: '#ffffff' }}>\r\n            <CenterPiece   style={{ paddingTop: '5%' }} changePage={(pageNum) => props.onChange(pageNum)} pageNum={props.pageNum} />\r\n\r\n            <ToolBar onChange={(pageNum) => props.onChange(pageNum)} page={props.page} />\r\n        </View>\r\n\r\n    );\r\n\r\n}","import { StyleSheet, SafeAreaView, View } from 'react-native';\nimport React, {Components, useState} from 'react';\nimport Main from './javaScriptFiles/Main.js';\n\nexport default function App() {\n\n\n  [page, setPage] = useState(1); \n\n  return (\n  <SafeAreaView style = {{flex:1, backgroundColor:'#f0f0f0'}}>\n  <View style={{flex:1}}>\n        \n    \n        <Main style = {{  flex:1}}  onChange = {(pageNum)=>setPage(pageNum)} pageNum = {page}/>\n\n\n\n    </View>\n  </SafeAreaView>\n\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#20488a',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}